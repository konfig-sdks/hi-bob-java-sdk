openapi: 3.0.1
info:
  description: Access your employees data with the Bob API
  title: Bob API
  version: 1.0.0
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
  x-konfig-uses-multipart-form-data: true
servers:
- description: Production
  url: https://api.hibob.com/v1
- description: Sandbox
  url: https://api.sandbox.hibob.com/v1
tags:
- name: People
- name: Tables
- name: Time off
- name: Payroll
- name: Metadata
- name: Documents
- name: Reports
- name: Tasks
- name: Custom Tables
- name: Onboarding
- name: Attendance
- name: Objects
paths:
  /people/search:
    post:
      description: "<b>Note:</b> Changes to this API are planned to take effect on\
        \ May 31, 2024.  Make sure to review all of the details in the <a href='https://help.hibob.com/hc/en-us/articles/19726260483601'>Working\
        \ pattern API Changes</a>  article in the help center.<br> <br>This API returns\
        \ a list of requested employees with requested fields.  The data is filtered\
        \ based on the requested fields and access level of the logged-in user.  Only\
        \ viewable categories are returned.<br /> <br><b>Note</b>: The values of the\
        \ list fields represent the list item ID and not the list item value. To obtain\
        \ the corresponding list item value, use the HiBob metadata API to determine\
        \ the field list name. Then, use the list item ID to locate the list item\
        \ value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_searchEmployees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadEmployeesRequestReference'
        description: Read request content that allows you to select fields and other
          options
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: Requested employees.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Search for employees
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--people-search
      x-content-type: application/json
      x-accepts: application/json
  /people:
    get:
      deprecated: true
      description: "<b>Note:</b> Deprecated at the end of March 2024. Please use <b>/people/search</b>\
        \ (\"Search for employees\") instead. <br/><br/> This returns a list of all\
        \ active employees. The data is filtered based on the access level of the\
        \ logged-in user. Only viewable categories are returned.<br /><br> <b>Note</b>:\
        \ The values of the list fields represent the list item ID and not the list\
        \ item value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listEmployees
      parameters:
      - description: Should include inactive employees.
        explode: true
        in: query
        name: showInactive
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether to supply humanReadable values in JSON instead of machine-readable
          format (default).
        explode: true
        in: query
        name: humanReadable
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-get-parameters-1-schema
        style: form
      - description: Whether to include the additional "humanReadable" JSON node in
          the response.
        explode: true
        in: query
        name: includeHumanReadable
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: All employees.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Read all company employees
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people
      x-accepts: application/json
    post:
      description: "<b>Note:</b> Changes to this API are planned to take effect on\
        \ May 31, 2024.  Make sure to review all of the details in the <a href='https://help.hibob.com/hc/en-us/articles/19726260483601'>Working\
        \ pattern API Changes</a>  article in the help center.<br> <br>This creates\
        \ a new employee record in Bob. You can include only the fields listed in\
        \ the  [Fields Metadata API](https://apidocs.hibob.com/reference/get_company-people-fields).\
        \  <br /><br><b>Note</b>"
      operationId: People_createEmployeeRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: Employee
      security:
      - Basic: []
      summary: Create company employee.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--people
      x-content-type: application/json
      x-accepts: application/json
  /people/{identifier}:
    get:
      deprecated: true
      description: "<b>Note:</b> Deprecated at the end of March 2024. Please use <b>POST\
        \ /people/{identifier}</b> (\"Read company employee fields by ID.\") instead.\
        \ <br/><br/> Returns the employee by the specified ID.<br /><br><b>Note</b>:\
        \ The values of the list fields represent the list item ID and not the list\
        \ item value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_readEmployeeById
      parameters:
      - description: employee id
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: string
          type: string
        style: simple
      - description: Whether to supply fields (paths) instead of empty list as a default
          in order  to not exceed data permitted.
        explode: true
        in: query
        name: fields
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to supply humanReadable values in JSON instead of machine-readable
          (default) format.
        explode: true
        in: query
        name: humanReadable
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-identifier-get-parameters-2-schema
        style: form
      - description: Whether to include the additional "humanReadable" JSON node in
          the response.
        explode: true
        in: query
        name: includeHumanReadable
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-identifier-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: Employee
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Read company employee by ID.
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-identifier
      x-accepts: application/json
    post:
      description: "<b>Note:</b> Changes to this API are planned to take effect on\
        \ May 31, 2024.  Make sure to review all of the details in the <a href='https://help.hibob.com/hc/en-us/articles/19726260483601'>Working\
        \ pattern API Changes</a>  article in the help center.<br> <br>Returns the\
        \ employee's fields by the specified ID or email.<br /><br><b>Note</b>: The\
        \ values of the list fields represent the list item ID and not the list item\
        \ value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_readEmployeeFields
      parameters:
      - description: employee ID or email
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadSingleEmployeeRequestReference'
        description: Read request content that allows you to select fields and other
          options
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: Employee
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Read company employee fields by employee ID.
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--people-identifier
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "<b>Note:</b> Changes to this API are planned to take effect on\
        \ May 31, 2024.  Make sure to review all of the details in the <a href='https://help.hibob.com/hc/en-us/articles/19726260483601'>Working\
        \ pattern API Changes</a>  article in the help center.<br> <br>This updates\
        \ the employee record in Bob. You can include only the fields listed in the\
        \  [Fields Metadata API](https://apidocs.hibob.com/reference/get_company-people-fields)\
        \ where historical is equal to false.  <br /><br><b>Note</b>"
      operationId: People_updateEmployeeRecord
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleUpdateEmployeeRecordRequest'
        description: Use Fields Metadata API for available field definitions
        required: true
      responses:
        "200":
          content: {}
          description: Employee updated successfully.
        "304":
          content: {}
          description: If employee data not modified.
      security:
      - Basic: []
      summary: Update company employee.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--people-identifier
      x-content-type: application/json
      x-accepts: application/json
  /employees/{identifier}/uninvite:
    post:
      operationId: People_revokeAccessToEmployee
      parameters:
      - description: employee id
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: string
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Revoke access successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Revoke access to Bob for an employee.
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--employees-identifier-uninvite
      x-accepts: application/json
  /employees/{identifier}/terminate:
    post:
      description: This changes the employee’s status to Terminated according to specified
        termination date. <br />
      operationId: People_terminateEmployee
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTermination'
        required: true
      responses:
        "200":
          content: {}
          description: Termination entry added successfully.
      security:
      - Basic: []
      summary: Terminate company employee.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--employees-identifier-terminate
      x-content-type: application/json
      x-accepts: application/json
  /onboarding/wizards:
    get:
      description: "Wizard info includes Wizard ID, name and description.<br /><b>Supported\
        \ user types:</b> Service."
      operationId: Onboarding_getWizardSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingWizards'
          description: Onboarding Wizards
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Get a summary of all onboarding wizards.
      tags:
      - Onboarding
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--onboarding-wizards
      x-accepts: application/json
  /employees/{employeeId}/invitations:
    post:
      operationId: People_inviteEmployeeWizard
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationByWizard'
        required: true
      responses:
        "200":
          content: {}
          description: Invitation submitted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Invite an employee with a welcome wizard ID.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--employees-employeeId-invitations
      x-content-type: application/json
      x-accepts: application/json
  /employees/{employeeId}/start-date:
    post:
      operationId: People_setStartDate
      parameters:
      - description: employee ID
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDateUpdate'
        required: true
      responses:
        "200":
          content: {}
          description: Start date was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Set or update an employee's start date.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--employees-employeeId-start-date
      x-content-type: application/json
      x-accepts: application/json
  /company/reports:
    get:
      description: Returns a list of all the defined company reports. The data is
        filtered based on the access level of the user. Only viewable categories are
        returned.<br />
      operationId: Reports_listAccessibleReports
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
          description: Company Reports
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Read company reports
      tags:
      - Reports
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-reports
      x-accepts: application/json
  /company/reports/{reportId}/download:
    get:
      description: Returns a report data file in the specified format.<br /><b>Supported
        user types:</b> Service.
      operationId: Reports_downloadById
      parameters:
      - description: Report ID
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: long
          type: number
        style: simple
      - description: File format
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - csv
          - xlsx
          - json
          type: string
        style: form
      - description: Should include info.
        explode: true
        in: query
        name: includeInfo
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      - description: "Requested language for the report columns in the format of locale\
          \ (e.g. fr-FR). If this is not provided, the user preferences locale is\
          \ used."
        explode: true
        in: query
        name: locale
        required: false
        schema:
          format: string
          type: string
        style: form
      - description: "Optional field. Only enforced when <i><b>format</b></i> is <i>json</i>.\
          \ <br> <b>If not sent:</b> supply machine-readable values only. <br> <br>\
          \ Possible values: <br>  <br> <b>APPEND</b> - include the additional \"\
          humanReadable\" JSON node in the response. <br>  <br> <b>REPLACE</b> - supply\
          \ humanReadable values in JSON instead of machine-readable format. <br>"
        explode: true
        in: query
        name: humanReadable
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsDownloadByIdResponse'
          description: Includes the report name and execution date in the report file.
            By default this is set to True.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Download the report by ID
      tags:
      - Reports
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-reports-reportId-download
      x-accepts: application/json
  /company/reports/{reportId}/download-async:
    get:
      description: Returns the polling URL report file of the specified format under
        "Location" in the response header.<br />
      operationId: Reports_getDownloadUrl
      parameters:
      - description: Report id
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: long
          type: number
        style: simple
      - description: File format
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - csv
          - xlsx
          type: string
        style: form
      - description: Should include info
        explode: true
        in: query
        name: includeInfo
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      - description: "Requested language for the report columns in the format of the\
          \ locale (e.g. fr-FR). If this is not provided, the user preferences locale\
          \ is used."
        explode: true
        in: query
        name: locale
        required: false
        schema:
          format: string
          type: string
        style: form
      - description: "Optional field. Only enforced when <i><b>format</b></i> is <i>json</i>.\
          \ <br> <b>If not sent:</b> supply machine-readable values only. <br> <br>\
          \ Possible values: <br>  <br> <b>APPEND</b> - include the additional \"\
          humanReadable\" JSON node in the response. <br>  <br> <b>REPLACE</b> - supply\
          \ humanReadable values in JSON instead of machine-readable format. <br>"
        explode: true
        in: query
        name: humanReadable
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: Report URL under "Location" in the response header.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Get the report download URL for polling
      tags:
      - Reports
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-reports-reportId-download-async
      x-accepts: application/json
  /company/reports/download/{reportName}:
    get:
      description: "Returns the report data file when it is ready. If the file is\
        \ not ready yet the response will be 204. It will then have to try again.<br\
        \ />(This URL is the response of the previous API: https://api.hibob.com/v1/company/reports/reportId/download-async)<br\
        \ />"
      operationId: Reports_downloadReportFile
      parameters:
      - description: Report name
        explode: false
        in: path
        name: reportName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsDownloadReportFileResponse'
          description: Include the report name and execution date in the report file.
            This defaults to true.
        "204":
          content: {}
          description: "The file is not yet ready, please try again."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Download report by file URL
      tags:
      - Reports
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-reports-download-reportName
      x-accepts: application/json
  /profiles:
    get:
      description: "Returns the public section of all  active employees of the logged-in\
        \ user company.<br /><br><b>Note</b>: The values of the list fields represent\
        \ the list item ID and not the list item value. To obtain the corresponding\
        \ list item value. Use the HiBob metadata API to determine the field list\
        \ name. Then, use the list item ID to locate the list item value. For more\
        \ information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listActiveEmployees
      parameters:
      - description: Optional field name to sort by. This defaults to firstName.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeesProfiles'
          description: Employee profiles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Read the public profile section of all active employees.
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--profiles
      x-accepts: application/json
  /avatars:
    get:
      description: Returns the avatar image URL of the employee.
      operationId: People_getEmailAvatar
      parameters:
      - description: Employee email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          format: string
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: URL of the emloyee avatar.
      security:
      - Basic: []
      summary: Read avatar for an employee email
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars
      x-accepts: application/json
  /avatars/{employeeId}:
    get:
      description: Returns the avatar image URL of the employee.
      operationId: People_getAvatarUrl
      parameters:
      - description: employee id
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          format: string
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: URL of the emloyee avatar.
      security:
      - Basic: []
      summary: Read avatar for an employee ID.
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-employeeId
      x-accepts: application/json
    put:
      description: Upload an employee's Avatar by providing a URL to the image to
        upload.<br />
      operationId: People_uploadEmployeeAvatarUrl
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadAvatar'
        required: true
      responses:
        "200":
          content: {}
          description: Avatar Uploaded successfully
      security:
      - Basic: []
      summary: Upload employee's avatar by image url
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--avatars-employeeId
      x-content-type: application/json
      x-accepts: application/json
  /my/avatar:
    get:
      description: Returns the avatar image URL of the logged-in user.<b>Supported
        user types:</b> Employee.
      operationId: People_getAvatarUrl
      responses:
        "200":
          content: {}
          description: URL of logged-in user avatar
      security:
      - Bearer: []
      summary: Read avatar for logged-in user
      tags:
      - People
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--my-avatar
      x-accepts: application/json
  /tasks:
    get:
      operationId: Tasks_getOpenTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: All open tasks for this company.
      security:
      - Basic: []
      summary: Read all open tasks.
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tasks
      x-accepts: application/json
  /my/tasks:
    get:
      description: <b>Supported user types:</b> Employee.
      operationId: Tasks_getEmployeeTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: The logged-in user's tasks.
      security:
      - Bearer: []
      summary: Read my tasks
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--my-tasks
      x-accepts: application/json
  /tasks/people/{id}:
    get:
      operationId: Tasks_readEmployeeTasks
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: string
          type: string
        style: simple
      - description: filter tasks by open / closed status. Not sending task_status
          will return all tasks.
        explode: true
        in: query
        name: task_status
        required: false
        schema:
          enum:
          - open
          - closed
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: All of a specific employee's open tasks.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: 'Read tasks of a specific employee '
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tasks-people-id
      x-accepts: application/json
  /tasks/{taskId}/complete:
    post:
      operationId: Tasks_completeTask
      parameters:
      - description: task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: Marks a task as complete.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Mark a task as complete
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--tasks-taskId-complete
      x-accepts: application/json
  /people/{id}/email:
    put:
      description: Change an employee's email address. If you cannot change the self
        email an invitation will be sent to the new address to verify the email if
        the employee is invited/active.<br />
      operationId: People_updateEmail
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmail'
        required: true
      responses:
        "200":
          content: {}
          description: Invitation sent successfully.
      security:
      - Basic: []
      summary: Update an employee's email address.
      tags:
      - People
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--people-id-email
      x-content-type: application/json
      x-accepts: application/json
  /company/named-lists:
    get:
      operationId: Metadata_getCompanyNamedLists
      parameters:
      - description: Whether to include archived items in the response.
        explode: true
        in: query
        name: includeArchived
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--company-named-lists-get-parameters-0-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lists'
          description: Successful response
      security:
      - Basic: []
      summary: Get all company lists
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-named-lists
      x-accepts: application/json
  /company/named-lists/{listName}:
    get:
      operationId: Metadata_getNamedList
      parameters:
      - description: The internal name of the list.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to include archived items in the response.
        explode: true
        in: query
        name: includeArchived
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--company-named-lists-listName-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Successful response. Please note that the item ID may be textual
            or numeric depending on the list type.
        "404":
          content: {}
          description: If the list was not found.
      security:
      - Basic: []
      summary: Get a specific company list by name.
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-named-lists-listName
      x-accepts: application/json
    post:
      operationId: Metadata_addNewItemToNamedList
      parameters:
      - description: The internal name of the list.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewListItem'
        description: "The <b>parentId</b> attribute is optional and only applies to\
          \ hierarchy lists. When <b>parentId</b> is specified, the newly created\
          \ list item will be placed under the specific hierarchy parent node."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatListItemId'
          description: A new item is created. Please note that the ID of the newly
            created item may be textual or numeric depending on the list type.
        "404":
          content: {}
          description: If the list was not found.
        "409":
          content: {}
          description: If the added item already exists
      security:
      - Basic: []
      summary: Add a new item to an existing list.
      tags:
      - Metadata
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--company-named-lists-listName
      x-content-type: application/json
      x-accepts: application/json
  /company/named-lists/{listName}/{itemId}:
    delete:
      operationId: Metadata_deleteItemFromCompanyNamedList
      parameters:
      - description: The internal name of the list.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the list item.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: The list item was deleted successfully.
        "404":
          content: {}
          description: If the list or item was not found
      security:
      - Basic: []
      summary: Delete an item from an existing list.
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--company-named-lists-listName-itemId
      x-accepts: application/json
    put:
      operationId: Metadata_updateItemFromNamedList
      parameters:
      - description: The internal name of the list.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the list item.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListItemRequest'
        description: "You need to provide at least one of: <b>name</b> or <b>parentId</b>.\
          \ Providing a name will rename the list item value. Providing the parent\
          \ ID will move the hierarchy list item (together with its children) under\
          \ the indicated parent node."
        required: true
      responses:
        "200":
          content: {}
          description: List item was updated successfully.
        "404":
          content: {}
          description: If the list or item was not found.
      security:
      - Basic: []
      summary: Update an existing item from a list.
      tags:
      - Metadata
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--company-named-lists-listName-itemId
      x-content-type: application/json
      x-accepts: application/json
  /company/people/fields:
    get:
      operationId: Metadata_getCompanyFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
          description: Successful response.
      security:
      - Basic: []
      summary: Get all company fields.
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--company-people-fields
      x-accepts: application/json
    post:
      operationId: Metadata_addNewField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFieldRequest'
        description: The field to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldId'
          description: The new field was successfully created. The ID of the field
            is returned.
        "400":
          content: {}
          description: "If the category of the field is root, or historical is set\
            \ to true, but the category doesn't allow it, or if the field type is\
            \ not supported."
        "404":
          content: {}
          description: If the category of the field doesn't exist
      security:
      - Basic: []
      summary: Create a new field.
      tags:
      - Metadata
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--company-people-fields
      x-content-type: application/json
      x-accepts: application/json
  /company/people/fields/{fieldId}:
    delete:
      operationId: Metadata_deleteField
      parameters:
      - description: The ID of the field.
        explode: false
        in: path
        name: fieldId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: The field was deleted successfully.
        "400":
          content: {}
          description: If the field is a Bob default field.
        "404":
          content: {}
          description: If the field doesn't exist
      security:
      - Basic: []
      summary: Delete an existing field.
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--company-people-fields-fieldId
      x-accepts: application/json
    put:
      operationId: Metadata_updateField
      parameters:
      - description: The ID of the field.
        explode: false
        in: path
        name: fieldId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldRequest'
        description: The new name and/or description of the updated field.
        required: true
      responses:
        "200":
          content: {}
          description: The field was updated successfully.
        "404":
          content: {}
          description: If the field doesn't exist.
      security:
      - Basic: []
      summary: Update an existing field
      tags:
      - Metadata
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--company-people-fields-fieldId
      x-content-type: application/json
      x-accepts: application/json
  /timeoff/employees/{id}/requests:
    post:
      description: Submits a new timeoff request.<br />
      operationId: TimeOff_submitNewRequest
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitTimeoffRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Successfully submitted
      security:
      - Basic: []
      summary: Submit a new time off request.
      tags:
      - Time off
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-requests
      x-content-type: application/json
      x-accepts: application/json
  /timeoff/employees/{id}/diffHours/requests:
    post:
      description: "Submits a new timeoff request of different hours per day.<br /><b>Supported\
        \ user types:</b> Employee, Service."
      operationId: TimeOff_submitNewRequestDiffHours
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitTimeoffRequestDiffHours'
        required: true
      responses:
        "200":
          content: {}
          description: Successfully submitted
      security:
      - Basic: []
      - Bearer: []
      summary: Submit a new time off request of different hours per day.
      tags:
      - Time off
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-diffHours-requests
      x-content-type: application/json
      x-accepts: application/json
  /timeoff/employees/{id}/requests/{requestId}:
    delete:
      description: Cancels an existing time off request.<br />
      operationId: TimeOff_cancelRequest
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Request ID.
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Successfully canceled
      security:
      - Basic: []
      summary: Cancel an existing timeoff request
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--timeoff-employees-id-requests-requestId
      x-accepts: application/json
    get:
      description: Supplies detailed info about an existing time off request.<br />
      operationId: TimeOff_getDetailsOfRequest
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: request id
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeoffRequest'
          description: success
        "404":
          content: {}
          description: A request with the specified ID is not found for the specified
            employee.
      security:
      - Basic: []
      summary: Get the details of an existing timeoff request.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-employees-id-requests-requestId
      x-accepts: application/json
  /timeoff/requests/changes:
    get:
      description: "Returns the list of time off requests that are pending, approved\
        \ or canceled since the specified date.<br />"
      operationId: TimeOff_getNewDeletedRequestsSinceDate
      parameters:
      - description: "Timestamp starting from which to return the changes. Should\
          \ be in ISO-8601 format, e.g. 2050-04-05T14:30:24.345Z or 2050-04-05T12:30-02:00."
        explode: true
        in: query
        name: since
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: Optional parameter. Indicates whether to include pending requests
          in the results.
        explode: true
        in: query
        name: includePending
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-requests-changes-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeoffChanges'
          description: List of changes
      security:
      - Basic: []
      summary: Get all new/deleted time off requests since the specified date.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-requests-changes
      x-accepts: application/json
  /timeoff/whosout:
    get:
      description: Returns time off information for a given date range.<br /><b>Supported
        user types:</b> Service.
      operationId: TimeOff_getWhosOut
      parameters:
      - description: Start period date
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: End period date
        explode: true
        in: query
        name: to
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: Include Hourly Requests
        explode: true
        in: query
        name: includeHourly
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-2-schema
        style: form
      - description: "Show the policy type's name instead of the policy's custom public\
          \ name if the user has permission to view it, and the policy's custom public\
          \ name exists."
        explode: true
        in: query
        name: includePrivate
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-3-schema
        style: form
      - description: Include Pending Requests
        explode: true
        in: query
        name: includePending
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requests'
          description: Time off requests as seen by the logged in user for a given
            date range.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Read a list of who's out of the office.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-whosout
      x-accepts: application/json
  /timeoff/outtoday:
    get:
      description: Returns the list of people that have a time off request today or
        on the specified date.<br />
      operationId: TimeOff_getOutOfOffice
      parameters:
      - description: "Date to report out of the office. If not specified, the date\
          \ at UTC at the time of the request is used."
        explode: true
        in: query
        name: today
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Include Hourly Requests
        explode: true
        in: query
        name: includeHourly
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-outtoday-get-parameters-1-schema
        style: form
      - description: "Show the policy type's name instead of the policy's custom public\
          \ name if the user has permission to view it, and the policy's custom public\
          \ name exists."
        explode: true
        in: query
        name: includePrivate
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-outtoday-get-parameters-2-schema
        style: form
      - description: The employee's site ID
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutTodays'
          description: "The list of people who have taken time off, as seen by the\
            \ logged in user."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Read a list of who's out of the office today or on the specified date.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-outtoday
      x-accepts: application/json
  /timeoff/policy-types/{policyType}/reason-codes:
    get:
      description: Get list of reason codes for a given policy type.<br />
      operationId: TimeOff_listReasonCodes
      parameters:
      - description: Policy Type name.
        explode: false
        in: path
        name: policyType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonCodes'
          description: List of reason codes.
        "404":
          content: {}
          description: A policy type with the specified name was not found.
      security:
      - Basic: []
      summary: Get Policy type reason codes
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types-policyType-reason-codes
      x-accepts: application/json
    post:
      description: Add a list of reason codes for a given policy type.<br /><b>Supported
        user types:</b> Service.
      operationId: TimeOff_addReasonCodes
      parameters:
      - description: Policy Type name
        explode: false
        in: path
        name: policyType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReasonCodesNames'
        required: true
      responses:
        "200":
          content: {}
          description: Submitted successfully.
        "404":
          content: {}
          description: A policy type with the specified name was not found.
      security:
      - Basic: []
      summary: Add a list of reason codes for a given policy type.
      tags:
      - Time off
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--timeoff-policy-types-policyType-reason-codes
      x-content-type: application/json
      x-accepts: application/json
  /timeoff/policy-types/{policyType}:
    get:
      description: Get details about a given policy type.<br />
      operationId: TimeOff_getPolicyDetails
      parameters:
      - description: Policy Type name
        explode: false
        in: path
        name: policyType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyType'
          description: Policy type
        "404":
          content: {}
          description: A policy type with the specified name was not found.
      security:
      - Basic: []
      summary: Get Policy type details
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types-policyType
      x-accepts: application/json
  /timeoff/policy-types:
    get:
      description: Get a list of all policy type names.<br />
      operationId: TimeOff_listPolicyTypesNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypes'
          description: List of policy types names.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Get all policy types names.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types
      x-accepts: application/json
  /timeoff/policies:
    get:
      description: Get details about a given policy.<br />
      operationId: TimeOff_getPolicyDetails
      parameters:
      - description: Policy name.
        explode: true
        in: query
        name: policyName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Policy
        "404":
          content: {}
          description: A policy with the specified name was not found.
      security:
      - Basic: []
      summary: Get Policy details.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-policies
      x-accepts: application/json
  /timeoff/policies/names:
    get:
      description: Get a list of policy names for the user's defined policy type.<br
        />
      operationId: TimeOff_listPolicyTypeNames
      parameters:
      - description: Policy type name.
        explode: true
        in: query
        name: policyTypeName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNames'
          description: A list of policy names.
      security:
      - Basic: []
      summary: Get a list of policy names for a given policy type.
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-policies-names
      x-accepts: application/json
  /timeoff/employees/{id}/balance:
    get:
      description: "Retrieve the balance for a given employee, for a given policy\
        \ type, as of a given date.<br />"
      operationId: TimeOff_getEmployeeBalance
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Policy type name.
        explode: true
        in: query
        name: policyType
        required: true
        schema:
          type: string
        style: form
      - description: Point in time.
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResult'
          description: Balance result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Get the balance for a given employee
      tags:
      - Time off
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--timeoff-employees-id-balance
      x-accepts: application/json
  /timeoff/employees/{id}/adjustments:
    post:
      description: Create a balance adjustment for a given employee for a given effective
        date.<br />
      operationId: TimeOff_createBalanceAdjustment
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Success.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Create a balance adjustment.
      tags:
      - Time off
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-adjustments
      x-content-type: application/json
      x-accepts: application/json
  /attendance/import/{importMethod}:
    post:
      operationId: Attendance_importData
      parameters:
      - description: "Indicates if the provided data should be processed via an aggregation\
          \ engine or immediately. <ul>Aggregate - will add the logs to a temporary\
          \ location, and an aggregation job will process the data asynchronously.</ul><ul>Immediate\
          \ - will insert the records as-is.</ul>"
        explode: false
        in: path
        name: importMethod
        required: true
        schema:
          enum:
          - aggregate
          - immediate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAttendanceData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportAttendanceResponse'
          description: Records imported
        "400":
          content: {}
          description: "Bad request, see error description."
        "403":
          content: {}
          description: Forbidden. Authorization is implemented using a service user
            with attendance management permissions.
      security:
      - Basic: []
      summary: Import attendance data
      tags:
      - Attendance
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--attendance-import-importMethod
      x-content-type: application/json
      x-accepts: application/json
  /payroll/history:
    get:
      operationId: Payroll_readHistory
      parameters:
      - description: filter payroll for specific department.
        explode: true
        in: query
        name: department
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include inactive employees in the response.
        explode: true
        in: query
        name: showInactive
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: Payroll data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Read payroll history.
      tags:
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-history
      x-accepts: application/json
  /docs/people/{id}/shared:
    post:
      operationId: Documents_uploadToSharedFolder
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocument'
        description: Document to upload.
        required: true
      responses:
        "200":
          content: {}
          description: Upload success.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Upload a document to the employee's shared folder
      tags:
      - Documents
      x-codegen-request-body-name: document
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--docs-people-id-shared
      x-content-type: application/json
      x-accepts: application/json
  /docs/people/{id}/confidential:
    post:
      operationId: Documents_uploadToConfidentialFolder
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocument'
        description: Document to upload.
        required: true
      responses:
        "200":
          content: {}
          description: Upload success.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Upload a document to the employee's confidential folder
      tags:
      - Documents
      x-codegen-request-body-name: document
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--docs-people-id-confidential
      x-content-type: application/json
      x-accepts: application/json
  /docs/people/{id}/shared/upload:
    post:
      operationId: Documents_uploadToSharedFolder
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsUploadToSharedFolderRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Uploaded document ID.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Upload a file to the employee's shared folder.
      tags:
      - Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--docs-people-id-shared-upload
      x-content-type: multipart/form-data
      x-accepts: application/json
  /docs/people/{id}/confidential/upload:
    post:
      operationId: Documents_uploadConfidentialFile
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsUploadConfidentialFileRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Uploaded document ID.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Upload a file to the employee's confidential folder.
      tags:
      - Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--docs-people-id-confidential-upload
      x-content-type: multipart/form-data
      x-accepts: application/json
  /docs/people/{id}/shared/{docId}:
    delete:
      operationId: Documents_removeEmployeeSharedDocument
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Document ID.
        explode: false
        in: path
        name: docId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Delete success.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Delete specific document from the employee's shared folder.
      tags:
      - Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--docs-people-id-shared-docId
      x-accepts: application/json
  /docs/people/{id}/confidential/{docId}:
    delete:
      operationId: Documents_deleteEmployeeConfidentialDoc
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Document ID.
        explode: false
        in: path
        name: docId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Delete success.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Delete a specific document from the employee's confidential folder.
      tags:
      - Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--docs-people-id-confidential-docId
      x-accepts: application/json
  /docs/people/{id}:
    get:
      description: Returns a list of documents and download links.<br />
      operationId: Documents_downloadLinks
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDocumentResponse'
          description: A list of the documents' names and download links.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Basic: []
      summary: Download employee's documents
      tags:
      - Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--docs-people-id
      x-accepts: application/json
  /people/{id}/work:
    get:
      description: "Returns a list of work history entries for a given employee.<br\
        \ /><br><b>Note</b>: The values of the list fields represent the list item\
        \ ID and not the list item value. To obtain the corresponding list item value,\
        \ use the HiBob metadata API to determine the field list name. Then, use the\
        \ list item ID to locate the list item value. For more information, see <a\
        \ href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_getWorkHistory
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkEntries'
          description: List of work history entries.
      security:
      - Basic: []
      summary: List employee's work history
      tags:
      - People
      - Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-work
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createWorkEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkEntry'
        description: Work entry to add. This must not conflict with another entry
          on the same effective date.
        required: true
      responses:
        "200":
          content: {}
          description: Entry created successfully
      security:
      - Basic: []
      summary: Creates a new work entry for a given employee.
      tags:
      - People
      - Tables
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/work/{entry_id}:
    delete:
      operationId: People_deleteWorkEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to delete
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully
      security:
      - Basic: []
      summary: Deletes a work entry from a given employee's work history.
      tags:
      - People
      - Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-work-entry_id
      x-accepts: application/json
    put:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_updateWorkEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to update.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkEntry'
        required: true
      responses:
        "200":
          content: {}
          description: Entry updated successfully.
        "404":
          content: {}
          description: Requested entry not found. Nothing was changed
      security:
      - Basic: []
      summary: Updates a work entry from employee's work history
      tags:
      - People
      - Tables
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/employment:
    get:
      description: "<b>Note:</b> Changes to this API are planned to take effect on\
        \ May 31, 2024.  Make sure to review all of the details in the <a href='https://help.hibob.com/hc/en-us/articles/19726260483601'>Working\
        \ pattern API Changes</a>  article in the help center.<br> <br>Returns a list\
        \ of employment history entries for a given employee.<br /><br><br><b>Note</b>:\
        \ The values of the list fields represent the list item ID and not the list\
        \ item value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_getEmploymentHistory
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentEntries'
          description: List of employment history entries.
      security:
      - Basic: []
      summary: List employee's employment history.
      tags:
      - People
      - Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-employment
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createEmploymentEntry
      parameters:
      - description: employee id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentEntry'
        description: Employment entry to add. This must not conflict with another
          entry on the same effective date.
        required: true
      responses:
        "200":
          content: {}
          description: Entry created successfully
      security:
      - Basic: []
      summary: Creates a new employment entry for a given employee.
      tags:
      - People
      - Tables
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/employment/{entry_id}:
    delete:
      operationId: People_deleteEmploymentEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to delete.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully.
      security:
      - Basic: []
      summary: Deletes an employment entry from a given employee's employment history.
      tags:
      - People
      - Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-employment-entry_id
      x-accepts: application/json
    put:
      description: "<br><b>Note</b>: The values of the list fields represent the list\
        \ item ID and not the list item value. To obtain the corresponding list item\
        \ value, use the HiBob metadata API to determine the field list name. Then,\
        \ use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_updateEmploymentEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to update.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentEntry'
        required: true
      responses:
        "200":
          content: {}
          description: Entry updated successfully
      security:
      - Basic: []
      summary: Updates an employment entry from a given employee's employment history.
      tags:
      - People
      - Tables
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/lifecycle:
    get:
      description: "Returns a list of life-cycle history entries for a given employee.<br\
        \ /><br><br><b>Note</b>: TThe values of the list fields represent the list\
        \ item ID and not the list item value. To obtain the corresponding list item\
        \ value, use the HiBob metadata API to determine the field list name. Then,\
        \ use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listEmployeeLifecycle
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeCycleEntries'
          description: List of life-cycle history entries.
      security:
      - Basic: []
      summary: List employee's life-cycle status history.
      tags:
      - People
      - Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-lifecycle
      x-accepts: application/json
  /people/{id}/salaries:
    get:
      description: "Returns a list of salary history entries for a given employee.<br\
        \ /><br><br><b>Note</b>: The values of the list fields represent the list\
        \ item ID and not the list item value. To obtain the corresponding list item\
        \ value, use the HiBob metadata API to determine the field list name. Then,\
        \ use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_getSalaryHistory
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryEntries'
          description: List of salary entries.
      security:
      - Basic: []
      summary: List employee's salary history.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-salaries
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createNewSalaryEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryEntry'
        description: Salary entry to add. This must not conflict with another entry
          on the same effective date.
        required: true
      responses:
        "200":
          content: {}
          description: Entry added successfully.
      security:
      - Basic: []
      summary: Creates a new salary entry for a given employee.
      tags:
      - People
      - Tables
      - Payroll
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/salaries/{entry_id}:
    delete:
      operationId: People_deleteSalaryEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to delete.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully.
      security:
      - Basic: []
      summary: Deletes a salary entry from the employee's list.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-salaries-entry_id
      x-accepts: application/json
  /people/{id}/equities:
    get:
      description: "Returns a list of equity grants for a given employee.<br /><b>Supported\
        \ user types:</b> Service<br><br><b>Note</b>: The values of the list fields\
        \ represent the list item ID and not the list item value. To obtain the corresponding\
        \ list item value, use the HiBob metadata API to determine the field list\
        \ name. Then, use the list item ID to locate the list item value. For more\
        \ information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listEquityGrants
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquityEntries'
          description: List of salary equity grants.
      security:
      - Basic: []
      summary: List the employee's equity grants.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-equities
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createEquityGrant
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquityEntry'
        description: Equity grant to add.
        required: true
      responses:
        "200":
          content: {}
          description: Entry added successfully.
      security:
      - Basic: []
      summary: Creates a new equity grant for a given employee.
      tags:
      - People
      - Tables
      - Payroll
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/equities/{entry_id}:
    delete:
      operationId: People_deleteEquityGrant
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The Entry ID to delete.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully.
      security:
      - Basic: []
      summary: Deletes an equity grant for an employee.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-equities-entry_id
      x-accepts: application/json
    put:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>. - Basic: [] - Bearer: []"
      operationId: People_updateEquityGrantForEmployee
      parameters:
      - description: Employee ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The entry ID to update.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquityEntry'
        required: true
      responses:
        "200":
          content: {}
          description: Entry updated successfully.
      security:
      - Basic: []
      summary: Updates an equity grant for an employee
      tags:
      - People
      - Tables
      - Payroll
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/variable:
    get:
      description: "Returns a list of variable payments for a given employee.<br /><br><b>Note</b>:\
        \ The values of the list fields represent the list item ID and not the list\
        \ item value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listVariablePayments
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableEntries'
          description: List of variable payments.
      security:
      - Basic: []
      summary: List employee's variable payments
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-variable
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>:The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createVariablePayment
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableEntry'
        description: Variable payment to add.
        required: true
      responses:
        "200":
          content: {}
          description: Entry added successfully
      security:
      - Basic: []
      summary: Creates a new variable payment for a given employee.
      tags:
      - People
      - Tables
      - Payroll
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/variable/{entry_id}:
    delete:
      operationId: People_deleteTrainingRecord
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The Entry ID to delete.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully.
      security:
      - Basic: []
      summary: Deletes a training record for an employee.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-variable-entry_id
      x-accepts: application/json
  /people/{id}/training:
    get:
      description: "Returns a list of training records for a given employee<br /><br><br><b>Note</b>:\
        \ The values of the list fields represent the list item ID and not the list\
        \ item value. To obtain the corresponding list item value, use the HiBob metadata\
        \ API to determine the field list name. Then, use the list item ID to locate\
        \ the list item value. For more information, see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_listTrainingRecords
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingEntries'
          description: List of training records.
      security:
      - Basic: []
      summary: List the employee's training records.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-id-training
      x-accepts: application/json
    post:
      description: "<br><br><b>Note</b>: The values of the list fields represent the\
        \ list item ID and not the list item value. To obtain the corresponding list\
        \ item value, use the HiBob metadata API to determine the field list name.\
        \ Then, use the list item ID to locate the list item value. For more information,\
        \ see <a href='https://apidocs.hibob.com/docs/how-to-work-with-lists-public-api'>How\
        \ to work with lists Public API</a>."
      operationId: People_createTrainingRecord
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingEntry'
        description: Training entry to add.
        required: true
      responses:
        "200":
          content: {}
          description: Entry added successfully.
      security:
      - Basic: []
      summary: Creates a new training records for a given employee
      tags:
      - People
      - Tables
      - Payroll
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /people/{id}/training/{entry_id}:
    delete:
      operationId: People_deleteTrainingRecord
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The Entry ID to delete.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully.
      security:
      - Basic: []
      summary: Deletes any training records for an employee.
      tags:
      - People
      - Tables
      - Payroll
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-id-training-entry_id
      x-accepts: application/json
  /people/custom-tables/metadata:
    get:
      operationId: Metadata_getCustomTableMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTableMetadataList'
          description: Successful response
      security:
      - Basic: []
      summary: Read metadata of custom tables defined
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-custom-tables-metadata
      x-accepts: application/json
  /people/custom-tables/metadata/{custom_table_id}:
    get:
      operationId: Metadata_getTableDetails
      parameters:
      - description: The ID of custom table.
        explode: false
        in: path
        name: custom_table_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTableMetadata'
          description: Successful response
      security:
      - Basic: []
      summary: Read metadata for specific custom table
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-custom-tables-metadata-custom_table_id
      x-accepts: application/json
  /people/custom-tables/{employee_id}/{custom_table_id}:
    get:
      operationId: CustomTables_readEntries
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table.
        explode: false
        in: path
        name: custom_table_id
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to include the additional "humanReadable" JSON node in
          the response.
        explode: true
        in: query
        name: includeHumanReadable
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-custom-tables-employee_id-custom_table_id-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTableEntriesList'
          description: Successful response
      security:
      - Basic: []
      summary: Read all entries of the given custom table
      tags:
      - Custom Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--people-custom-tables-employee_id-custom_table_id
      x-accepts: application/json
    post:
      operationId: CustomTables_createNewEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table.
        explode: false
        in: path
        name: custom_table_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              values:
              - column_1663598152485: 5185395
                column_1663598024920: 2022-09-30
                column_1663598120787: "2871255975417872769"
                column_1663598037763: 123456
                column_1663598145154: 371223
                column_1663597977169: text text
                column_1663597992534: text area text area text area
                column_1663598108167:
                  value: 240
                  currency: USD
                column_1663598062584: "252614471"
                column_1663598090762:
                - "252614475"
                - "252614476"
            schema:
              $ref: '#/components/schemas/CustomTablesCreateNewEntryRequest'
            x-konfig-original-example:
              values:
              - column_1663598152485: 5185395
                column_1663598024920: 2022-09-30
                column_1663598120787: "2871255975417872769"
                column_1663598037763: 123456
                column_1663598145154: 371223
                column_1663597977169: text text
                column_1663597992534: text area text area text area
                column_1663598108167:
                  value: 240
                  currency: USD
                column_1663598062584: "252614471"
                column_1663598090762:
                - "252614475"
                - "252614476"
        required: true
      responses:
        "200":
          content: {}
          description: Entry created successfully
      security:
      - Basic: []
      summary: Create new custom table entry
      tags:
      - Custom Tables
      x-codegen-request-body-name: values
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--people-custom-tables-employee_id-custom_table_id
      x-content-type: application/json
      x-accepts: application/json
  /people/custom-tables/{employee_id}/{custom_table_id}/{entry_id}:
    delete:
      operationId: CustomTables_deleteEntryById
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table.
        explode: false
        in: path
        name: custom_table_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table entry.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Entry deleted successfully
      security:
      - Basic: []
      summary: Delete custom table entry
      tags:
      - Custom Tables
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--people-custom-tables-employee_id-custom_table_id-entry_id
      x-accepts: application/json
    put:
      operationId: CustomTables_updateEntry
      parameters:
      - description: Employee ID.
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table.
        explode: false
        in: path
        name: custom_table_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of custom table entry.
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTablesUpdateEntryRequest'
        required: false
      responses:
        "200":
          content: {}
          description: Entry updated successfully
      security:
      - Basic: []
      summary: Update custom table entry
      tags:
      - Custom Tables
      x-codegen-request-body-name: entry
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--people-custom-tables-employee_id-custom_table_id-entry_id
      x-content-type: application/json
      x-accepts: application/json
  /metadata/objects/position:
    get:
      description: Returns a list of all fields of object type position.<br/>
      operationId: Metadata_getPositionFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectsMetadata'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Get all positions fields
      tags:
      - Metadata
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--metadata-objects-position
      x-accepts: application/json
  /objects/position/search:
    post:
      description: "Returns a list of the company positions, filtered by the specified\
        \ attributes.  <br /><br><b>Note</b>"
      operationId: Objects_searchCompanyPositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPositionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionEntries'
          description: Positions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      security:
      - Basic: []
      summary: Read company positions
      tags:
      - Objects
      x-codegen-request-body-name: body
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--objects-position-search
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    CurrencyValue:
      properties:
        value:
          format: double
          type: number
        currency:
          description: Three-letter currency code.
          type: string
      required:
      - currency
      - value
      type: object
    TableEntry:
      properties:
        id:
          description: ID.
          type: integer
        reason:
          description: The reason for this change.
          type: string
        effectiveDate:
          description: The date this entry becomes effective.
          format: date
          type: string
      required:
      - effectiveDate
      type: object
    SalaryEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - $ref: '#/components/schemas/SalaryEntry_allOf'
      required:
      - base
      - payPeriod
    SalaryEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/SalaryEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EquityEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - $ref: '#/components/schemas/EquityEntry_allOf'
      required:
      - equityType
      - quantity
    EquityEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/EquityEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    VariableEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - $ref: '#/components/schemas/VariableEntry_allOf'
      required:
      - amount
      - paymentPeriod
      - type
    VariableEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/VariableEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    TrainingEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - $ref: '#/components/schemas/TrainingEntry_allOf'
      required:
      - amount
      - paymentPeriod
      - type
    TrainingEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/TrainingEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmploymentEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - $ref: '#/components/schemas/EmploymentEntry_allOf'
      required:
      - effectiveDate
    EmploymentEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/EmploymentEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    WorkEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - type: object
      - $ref: '#/components/schemas/WorkEntry_allOf'
      - type: object
    WorkEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/WorkEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    LifeCycleEntry:
      allOf:
      - $ref: '#/components/schemas/TableEntry'
      - type: object
      - $ref: '#/components/schemas/LifeCycleEntry_allOf'
      - type: object
    LifeCycleEntries:
      example:
        values:
        - null
        - null
      properties:
        values:
          items:
            $ref: '#/components/schemas/LifeCycleEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeReference:
      example:
        firstName: firstName
        surname: surname
        id: id
        email: email
      properties:
        id:
          type: string
        firstName:
          type: string
        surname:
          type: string
        email:
          type: string
      type: object
    ReadEmployeesRequestReference:
      example:
        showInactive: true
        filters:
        - values:
          - employeeId1
          - employeeId2
          - employeeId3
          fieldPath: root.id
          operator: equals
        - values:
          - employeeId1
          - employeeId2
          - employeeId3
          fieldPath: root.id
          operator: equals
        fields:
        - root.id
        - root.firstName
        - root.surname
        - root.email
        - work.site
        - work.department
        humanReadable: humanReadable
      properties:
        fields:
          description: |-
            Optional array of employee field paths that's are required in response. If you don't specify fields - only basic fields and categories are returned: <br/><b>Basic fields:</b>  <ul>
                                  <li>ID</li>
                                  <li>Company ID</li>
                                  <li>Email</li>
                                  <li>First name</li>
                                  <li>Last name</li>
                                  <li>Display name</li>
                                  <li>Middle name</li>
                                  <li>Creation timestamp</li>
                                  <li>Avatar URL</li>
            </ul> <br/><b>Basic Categories:</b> <ul>
                                  <li>About</li>
                                  <li>Employment</li>
                                  <li>Work</li>
            </ul>
          example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          items:
            type: string
          type: array
          x-konfig-original-example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadEmployeesRequestReference-properties-fields
        filters:
          description: Optional list of filters for filtering employees. We currently
            support up to one filter.
          items:
            $ref: '#/components/schemas/EmployeeFilter'
          type: array
        showInactive:
          description: <br>Optional field. <br>Default value = false. <br>Defines
            whether response should include inactive employees.
          type: boolean
        humanReadable:
          description: "Optional field.  <br> <b>If not sent:</b> supply machine-readable\
            \ values only. <br> <br> Possible values: <br>  <br> <b>APPEND</b> - include\
            \ the additional \"humanReadable\" JSON node in the response. <br>  <br>\
            \ <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable\
            \ format. <br>"
          type: string
      type: object
    ReadSingleEmployeeRequestReference:
      example:
        fields:
        - root.id
        - root.firstName
        - root.surname
        - root.email
        - work.site
        - work.department
        humanReadable: humanReadable
      properties:
        fields:
          description: |-
            Optional array of employee field paths that's are required in response. If you don't specify fields - only basic fields and categories are returned: <br/><b>Basic fields:</b>  <ul>
                                  <li>ID</li>
                                  <li>Company ID</li>
                                  <li>Email</li>
                                  <li>First name</li>
                                  <li>Last name</li>
                                  <li>Display name</li>
                                  <li>Middle name</li>
                                  <li>Creation timestamp</li>
                                  <li>Avatar URL</li>
            </ul> <br/><b>Basic Categories:</b> <ul>
                                  <li>About</li>
                                  <li>Employment</li>
                                  <li>Work</li>
            </ul>
          example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          items:
            type: string
          type: array
          x-konfig-original-example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadSingleEmployeeRequestReference-properties-fields
        humanReadable:
          description: "Optional field.  <br> <b>If not sent:</b> supply machine-readable\
            \ values only. <br> <br> Possible values: <br>  <br> <b>APPEND</b> - include\
            \ the additional \"humanReadable\" JSON node in the response. <br>  <br>\
            \ <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable\
            \ format. <br>"
          type: string
      type: object
    EmployeeFilter:
      example:
        values:
        - employeeId1
        - employeeId2
        - employeeId3
        fieldPath: root.id
        operator: equals
      properties:
        fieldPath:
          description: "The field id (path) to filter by.<br /> Supported fields:\
            \ “root.id”, \"root.email\".<br />Any other path will get a response of\
            \ 400 HTTP error."
          example: root.id
          type: string
          x-konfig-original-example: root.id
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeFilter-properties-fieldPath
        operator:
          description: "Supported operators: “equals” <br /> Any other operator will\
            \ get a response of 400 HTTP error."
          example: equals
          type: string
          x-konfig-original-example: equals
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeFilter-properties-operator
        values:
          description: List of values to compare. <br /> Empty list will result in
            400 HTTP error.
          example:
          - employeeId1
          - employeeId2
          - employeeId3
          items:
            type: string
          type: array
          x-konfig-original-example:
          - employeeId1
          - employeeId2
          - employeeId3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeFilter-properties-values
      type: object
    WorkPart:
      example:
        site: site
        reportsTo:
          firstName: firstName
          surname: surname
          id: id
          email: email
        title: title
        department: department
        startDate: 2000-01-23
      properties:
        title:
          description: The employee's title.
          type: string
        reportsTo:
          $ref: '#/components/schemas/EmployeeReference'
        department:
          description: The employee's description.
          type: string
        site:
          description: The employee's site.
          type: string
        startDate:
          description: The employee's employment start date
          format: date
          type: string
      type: object
    AboutPart:
      example:
        hobbies:
        - hobbies
        - hobbies
        avatar: avatar
      properties:
        avatar:
          description: Image URL of the employee's avatar.
          type: string
        hobbies:
          description: An array of the employee's hobbies.
          items:
            type: string
          type: array
      type: object
    PersonalPart:
      example:
        gender: gender
        shortBirthDate: shortBirthDate
        honorific: honorific
      properties:
        honorific:
          description: "The employee's title, This can be Mr, Mrs. Ms. etc."
          type: string
        shortBirthDate:
          type: string
        gender:
          description: One of Male / Female.
          type: string
      type: object
    CreateEmployeeRequest:
      example:
        firstName: firstName
        surname: surname
        work:
          site: site
          startDate: 2000-01-23
        email: email
      properties:
        firstName:
          description: Employee's first name.
          type: string
        surname:
          description: Employee's surname.
          type: string
        email:
          description: Employee's email address.
          format: email
          type: string
        work:
          $ref: '#/components/schemas/CreateEmployeeRequest_work'
      required:
      - email
      - firstName
      - surname
      type: object
    EmployeeTermination:
      example:
        terminationDate: 2025-09-23
        noticePeriod:
          unit: days
          length: 30
        lastDayOfWork: 2025-09-22
        terminationReason: Redundant
        reasonType: End of Contract
      properties:
        terminationDate:
          description: The employee's termination date
          example: 2025-09-23
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationDate
        terminationReason:
          description: The ID of the 'terminationReason' list entry
          example: Redundant
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationReason
        reasonType:
          description: The ID of the 'lifecycleReasonType' list entry
          example: End of Contract
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-reasonType
        noticePeriod:
          $ref: '#/components/schemas/EmployeeTermination_noticePeriod'
        lastDayOfWork:
          example: 2025-09-22
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-lastDayOfWork
      required:
      - terminationDate
      type: object
      x-konfig-original-example:
        terminationDate: 2025-09-23
        noticePeriod:
          unit: days
          length: 30
        lastDayOfWork: 2025-09-22
        terminationReason: Redundant
        reasonType: End of Contract
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination
    Employee:
      example:
        firstName: firstName
        surname: surname
        displayName: displayName
        work:
          site: site
          reportsTo:
            firstName: firstName
            surname: surname
            id: id
            email: email
          title: title
          department: department
          startDate: 2000-01-23
        about:
          hobbies:
          - hobbies
          - hobbies
          avatar: avatar
        personal:
          gender: gender
          shortBirthDate: shortBirthDate
          honorific: honorific
        id: id
        email: email
      properties:
        id:
          description: A unique identifier representing a specific employee.
          type: string
        firstName:
          description: Employee's first name.
          type: string
        surname:
          description: Employee's surname.
          type: string
        email:
          description: Employee's email address.
          format: email
          type: string
        displayName:
          description: Employee's display name. This defaults to first name & last
            name but can be customized.
          type: string
        personal:
          $ref: '#/components/schemas/PersonalPart'
        about:
          $ref: '#/components/schemas/AboutPart'
        work:
          $ref: '#/components/schemas/WorkPart'
      type: object
      x-konfig-is-used-in-successful-response: true
    Employees:
      example:
        employees:
        - firstName: firstName
          surname: surname
          displayName: displayName
          work:
            site: site
            reportsTo:
              firstName: firstName
              surname: surname
              id: id
              email: email
            title: title
            department: department
            startDate: 2000-01-23
          about:
            hobbies:
            - hobbies
            - hobbies
            avatar: avatar
          personal:
            gender: gender
            shortBirthDate: shortBirthDate
            honorific: honorific
          id: id
          email: email
        - firstName: firstName
          surname: surname
          displayName: displayName
          work:
            site: site
            reportsTo:
              firstName: firstName
              surname: surname
              id: id
              email: email
            title: title
            department: department
            startDate: 2000-01-23
          about:
            hobbies:
            - hobbies
            - hobbies
            avatar: avatar
          personal:
            gender: gender
            shortBirthDate: shortBirthDate
            honorific: honorific
          id: id
          email: email
      properties:
        employees:
          items:
            $ref: '#/components/schemas/Employee'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeProfile:
      example:
        firstName: firstName
        surname: surname
        displayName: displayName
        work:
          site: site
          reportsTo:
            firstName: firstName
            surname: surname
            id: id
            email: email
          title: title
          department: department
          startDate: 2000-01-23
        about:
          hobbies:
          - hobbies
          - hobbies
          avatar: avatar
        personal:
          gender: gender
          shortBirthDate: shortBirthDate
          honorific: honorific
        id: id
        email: email
      properties:
        id:
          description: A unique identifier representing a specific employee.
          type: string
        firstName:
          description: Employee's first name.
          type: string
        surname:
          description: Employee's surname.
          type: string
        email:
          description: Employee's email address.
          format: email
          type: string
        displayName:
          description: The employee's display name. This defaults to first name &
            last name but can be customized.
          type: string
        personal:
          $ref: '#/components/schemas/PersonalPart'
        about:
          $ref: '#/components/schemas/AboutPart'
        work:
          $ref: '#/components/schemas/WorkPart'
      type: object
    EmployeesProfiles:
      example:
        employees:
        - firstName: firstName
          surname: surname
          displayName: displayName
          work:
            site: site
            reportsTo:
              firstName: firstName
              surname: surname
              id: id
              email: email
            title: title
            department: department
            startDate: 2000-01-23
          about:
            hobbies:
            - hobbies
            - hobbies
            avatar: avatar
          personal:
            gender: gender
            shortBirthDate: shortBirthDate
            honorific: honorific
          id: id
          email: email
        - firstName: firstName
          surname: surname
          displayName: displayName
          work:
            site: site
            reportsTo:
              firstName: firstName
              surname: surname
              id: id
              email: email
            title: title
            department: department
            startDate: 2000-01-23
          about:
            hobbies:
            - hobbies
            - hobbies
            avatar: avatar
          personal:
            gender: gender
            shortBirthDate: shortBirthDate
            honorific: honorific
          id: id
          email: email
      properties:
        employees:
          items:
            $ref: '#/components/schemas/EmployeeProfile'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Fields:
      items:
        $ref: '#/components/schemas/Field'
      type: array
      x-konfig-is-used-in-successful-response: true
    Field:
      example:
        name: name
        description: description
        historical: true
        jsonPath: jsonPath
        id: id
        category: category
        type: type
        typeData:
          listId: listId
      properties:
        description:
          description: Description of the field.
          type: string
        id:
          description: ID of the field.
          type: string
        category:
          description: Category of the field.
          type: string
        name:
          description: Name of the field.
          type: string
        jsonPath:
          description: A dot-separated path of this field value in the employee JSON
            returned by the /v1/profiles endpoint.
          type: string
        type:
          description: "The type of the field. Supported field types: text, text-area,\
            \ number, date, list, multi-list, hierarchy-list, currency, employee-reference,\
            \ document."
          type: string
        typeData:
          $ref: '#/components/schemas/Field_typeData'
        historical:
          description: "When true, this field keeps the history of its values, each\
            \ being active starting from a certain date. The default value is false."
          type: boolean
      type: object
    CreateFieldRequest:
      example:
        name: name
        description: description
        historical: historical
        category: category
        type: type
      properties:
        description:
          description: The description of the field.
          type: string
        name:
          description: The name of the field.
          type: string
        category:
          description: The category of the field.
          type: string
        type:
          description: "The type of field. Supported field types: text, text-area,\
            \ number, date, list, multi-list, hierarchy-list, currency, employee-reference,\
            \ document."
          type: string
        historical:
          description: "When true, this field keeps the history of its values, each\
            \ being active starting from a certain date. The default value is false."
          type: string
      required:
      - category
      - name
      - type
      type: object
    UpdateFieldRequest:
      example:
        name: name
        description: description
      properties:
        description:
          description: The description of the field.
          type: string
        name:
          description: The name of the field.
          type: string
      type: object
    Lists:
      items:
        $ref: '#/components/schemas/List'
      type: array
      x-konfig-is-used-in-successful-response: true
    List:
      example:
        name: name
        items:
        - archived: true
          children:
          - null
          - null
          name: name
          id: 0
        - archived: true
          children:
          - null
          - null
          name: name
          id: 0
      properties:
        name:
          description: The name of the list
          type: string
        items:
          description: The elements in the list.
          items:
            $ref: '#/components/schemas/ListItem'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    FlatListItemId:
      example:
        id: id
      properties:
        id:
          description: The ID of the list item.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    FieldId:
      example:
        id: id
      properties:
        id:
          description: The ID of the field.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ListItem:
      example:
        archived: true
        children:
        - null
        - null
        name: name
        id: 0
      properties:
        id:
          description: Internal ID of the item.
          type: integer
        name:
          description: Name of the item.
          type: string
        archived:
          description: Whether the item is archived (not available for selection).
          type: boolean
        children:
          description: Nested items - if the list is nested.
          items:
            $ref: '#/components/schemas/ListItem'
          type: array
      type: object
    NewListItem:
      example:
        name: name
        parentId: 0
      properties:
        name:
          description: Name of the item.
          type: string
        parentId:
          description: ID of the new hierarchy parent node.
          type: integer
      required:
      - name
      type: object
    UpdateListItemRequest:
      example:
        name: name
        parentId: 0
      properties:
        name:
          description: Name of the item.
          type: string
        parentId:
          description: ID of the new hierarchy parent node.
          type: integer
      type: object
    OutToday:
      example:
        date: 2000-01-23
        hours: 6
        policyTypeDisplayName: policyTypeDisplayName
        requestRangeType: days
        endDate: 2000-01-23
        minutes: 1
        employeeEmail: employeeEmail
        endDatePortion: endDatePortion
        dailyHours: 0.8008281904610115
        employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDatePortion: startDatePortion
        dayPortion: dayPortion
        employeeDisplayName: employeeDisplayName
        startDate: 2000-01-23
      properties:
        employeeId:
          description: Employee ID.
          format: uuid
          type: string
        employeeDisplayName:
          description: Employee display name.
          type: string
        employeeEmail:
          description: Employee email address.
          type: string
        policyTypeDisplayName:
          description: Display name of the policy type.
          type: string
        startDate:
          description: Date of the first day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        startDatePortion:
          description: "What portion of the first day is included - all_day, morning\
            \ or afternoon (relevant for request using the days type)."
          type: string
        endDate:
          description: Date of the last day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        endDatePortion:
          description: "What portion of the last day is included - all_day, morning\
            \ or afternoon (relevant for request using the days type)."
          type: string
        requestRangeType:
          description: The type of request duration.<br> <b>portionOnRange</b> is
            when the request is for every morning or every afternoon during the days
            requested.<br> <b>hoursOnRange</b> is when the request is for X hours
            every day during the days requested.
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          type: string
        dayPortion:
          description: What portion of the request's days is included - morning or
            afternoon (relevant for request using the portionOnRange type).
          type: string
        dailyHours:
          description: The time off duration in hours for every request's days (relevant
            for requests with hoursOnRange type).
          type: number
        date:
          description: Date of the time off (relevant for requests using the hours
            type).
          format: date
          type: string
        hours:
          description: The time off duration in hours for the date (relevant for requests
            with hours type).
          type: integer
        minutes:
          description: Relevant for requests using the hours type.
          type: integer
      type: object
    OutTodays:
      example:
        outs:
        - date: 2000-01-23
          hours: 6
          policyTypeDisplayName: policyTypeDisplayName
          requestRangeType: days
          endDate: 2000-01-23
          minutes: 1
          employeeEmail: employeeEmail
          endDatePortion: endDatePortion
          dailyHours: 0.8008281904610115
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDatePortion: startDatePortion
          dayPortion: dayPortion
          employeeDisplayName: employeeDisplayName
          startDate: 2000-01-23
        - date: 2000-01-23
          hours: 6
          policyTypeDisplayName: policyTypeDisplayName
          requestRangeType: days
          endDate: 2000-01-23
          minutes: 1
          employeeEmail: employeeEmail
          endDatePortion: endDatePortion
          dailyHours: 0.8008281904610115
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDatePortion: startDatePortion
          dayPortion: dayPortion
          employeeDisplayName: employeeDisplayName
          startDate: 2000-01-23
      properties:
        outs:
          items:
            $ref: '#/components/schemas/OutToday'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Request:
      example:
        date: 2000-01-23
        policyTypeDisplayName: policyTypeDisplayName
        endDate: 2000-01-23
        minutes: 1
        dailyHours: 5.962133916683182
        employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hoursOnDate: 6
        type: days
        dayPortion: dayPortion
        requestId: 0
        policyType: policyType
        startPortion: startPortion
        employeeDisplayName: employeeDisplayName
        endPortion: endPortion
        startDate: 2000-01-23
        status: status
      properties:
        requestId:
          format: int64
          type: integer
        employeeId:
          description: Employee ID.
          format: uuid
          type: string
        policyType:
          description: "Request policy type, e.g. Holiday, Sick or any defined custom\
            \ type."
          type: string
        policyTypeDisplayName:
          description: Display name for the policy type. This will be translated based
            on the locale.
          type: string
        type:
          description: The type of request duration.<br> <b>portionOnRange</b> is
            when the request is for every morning or every afternoon during the days
            requested.<br> <b>hoursOnRange</b> is when the request is for X hours
            every day during the days requested.
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          type: string
        startDate:
          description: Date of the first day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        startPortion:
          description: "What portion of the first day is included - all_day, morning\
            \ or afternoon (relevant for request using the days type)."
          type: string
        endDate:
          description: Date of the last day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        endPortion:
          description: "What portion of the last day is included - all_day, morning\
            \ or afternoon (relevant for requests using the days type)."
          type: string
        dayPortion:
          description: What portion of the request's days is included - morning or
            afternoon (relevant for requests using the portionOnRange type).
          type: string
        date:
          description: Date of the time off (relevant for request using the hours
            type)
          format: date
          type: string
        hoursOnDate:
          description: The time off duration in hours for the date (relevant for request
            using the hours type).
          type: integer
        minutes:
          description: Relevant for request using the hours type.
          type: integer
        dailyHours:
          description: The time off duration in hours for every day in the request
            (relevant for requests using the hoursOnRange type).
          type: number
        status:
          description: Request status. This can be either Approved or Pending.
          type: string
        employeeDisplayName:
          description: Employee display name.
          type: string
      type: object
    Requests:
      example:
        outs:
        - date: 2000-01-23
          policyTypeDisplayName: policyTypeDisplayName
          endDate: 2000-01-23
          minutes: 1
          dailyHours: 5.962133916683182
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hoursOnDate: 6
          type: days
          dayPortion: dayPortion
          requestId: 0
          policyType: policyType
          startPortion: startPortion
          employeeDisplayName: employeeDisplayName
          endPortion: endPortion
          startDate: 2000-01-23
          status: status
        - date: 2000-01-23
          policyTypeDisplayName: policyTypeDisplayName
          endDate: 2000-01-23
          minutes: 1
          dailyHours: 5.962133916683182
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hoursOnDate: 6
          type: days
          dayPortion: dayPortion
          requestId: 0
          policyType: policyType
          startPortion: startPortion
          employeeDisplayName: employeeDisplayName
          endPortion: endPortion
          startDate: 2000-01-23
          status: status
      properties:
        outs:
          items:
            $ref: '#/components/schemas/Request'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    ReasonCode:
      example:
        displayName: displayName
        id: 0
      properties:
        id:
          type: integer
        displayName:
          type: string
      type: object
    ReasonCodes:
      example:
        reasonCodes:
        - displayName: displayName
          id: 0
        - displayName: displayName
          id: 0
      properties:
        reasonCodes:
          items:
            $ref: '#/components/schemas/ReasonCode'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    ReasonCodesNames:
      example:
        reasonCodes:
        - reasonCodes
        - reasonCodes
      properties:
        reasonCodes:
          items:
            description: A list of reason codes.
            type: string
          type: array
      type: object
    PolicyType:
      example:
        unit: days
        activity: paidTimeoff
        name: name
        bookingWorkDaysOnly: true
      properties:
        name:
          type: string
        activity:
          description: Activity type.
          enum:
          - paidTimeoff
          - unpaidTimeoff
          - workTime
          type: string
        bookingWorkDaysOnly:
          description: Requests will be deducted from the balance only for working
            days.
          type: boolean
        unit:
          enum:
          - days
          - hours
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PolicyTypes:
      example:
        policyTypes:
        - policyTypes
        - policyTypes
      properties:
        policyTypes:
          items:
            type: string
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PolicyNames:
      example:
        policyNames:
        - policyNames
        - policyNames
      properties:
        policyNames:
          items:
            description: A list of policy names.
            type: string
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Policy:
      example:
        unit: days
        minBalance: 1.4658129805029452
        approvalRequired: true
        name: name
        yosIncrease:
        - yearsOfService: 5.962133916683182
          extraDays: 5.637376656633329
        - yearsOfService: 5.962133916683182
          extraDays: 5.637376656633329
        description: description
        maxBalance: 6.027456183070403
        allowance: 0.8008281904610115
        minTimeOffRequestDuration: fullDay
      properties:
        description:
          description: Policy description.
          type: string
        name:
          type: string
        allowance:
          description: Base annual allowance.
          type: number
        maxBalance:
          description: Maximum balance at the end of the cycle.
          type: number
        minBalance:
          description: Minimum balance cap.
          type: number
        yosIncrease:
          items:
            $ref: '#/components/schemas/YearsOfServiceIncrements'
          type: array
        minTimeOffRequestDuration:
          description: The shortest amount of time employees can request.
          enum:
          - fullDay
          - halfDay
          - fullHour
          - halfHour
          - quarterHour
          type: string
        approvalRequired:
          description: Requests require approval.
          type: boolean
        unit:
          enum:
          - days
          - hours
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    YearsOfServiceIncrements:
      example:
        yearsOfService: 5.962133916683182
        extraDays: 5.637376656633329
      properties:
        yearsOfService:
          description: Start after this number of years.
          type: number
        extraDays:
          description: Additional days to add.
          type: number
      type: object
    BalanceResult:
      example:
        totalSystemAdjustments: 2.3021358869347655
        pointInTime: 2000-01-23
        startingBalanceAsOf: 2000-01-23
        totalTaken: 5.962133916683182
        totalAdminAdjustments: 5.637376656633329
        totalBalanceAsOfDate: 0.8008281904610115
        employeeId: employeeId
        totalRoundedBalanceAsOfDate: 6.027456183070403
        annualAllowance: 7.061401241503109
        startingBalance: 1.4658129805029452
        policy: policy
      properties:
        employeeId:
          description: Employee ID.
          type: string
        totalBalanceAsOfDate:
          description: The retrieved balance as of this date.
          type: number
        totalRoundedBalanceAsOfDate:
          description: The retrieved rounded balance as of this date.
          type: number
        pointInTime:
          description: The balance date.
          format: date
          type: string
        startingBalance:
          description: The balance as of the cycle start date.
          type: number
        startingBalanceAsOf:
          description: The cycle start date.
          format: date
          type: string
        totalTaken:
          description: Total number of days/hours taken.
          type: number
        totalAdminAdjustments:
          description: Total number of days/hours manually adjusted.
          type: number
        totalSystemAdjustments:
          description: Total number of days/hours adjusted.
          type: number
        annualAllowance:
          description: Annual allowance.
          type: number
        policy:
          description: Policy name.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    AdjustmentRequest:
      example:
        reason: reason
        amount: 0.8008281904610115
        adjustmentType: balance
        policyType: policyType
        effectiveDate: 2000-01-23
      properties:
        adjustmentType:
          description: Adjustment type - balance or time used.
          enum:
          - balance
          - daysUsed
          type: string
        policyType:
          description: Policy type name.
          type: string
        effectiveDate:
          description: The date this adjustment becomes effective.
          format: date
          type: string
        amount:
          description: The amount of days/hours to add/subtract.
          type: number
        reason:
          description: A reason for this adjustment.
          type: string
      type: object
    EmployeeDocumentResponse:
      example:
        documents:
        - downloadLink: downloadLink
          documentName: documentName
        - downloadLink: downloadLink
          documentName: documentName
      properties:
        documents:
          items:
            $ref: '#/components/schemas/EmployeeDocumentWithDownloadLink'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeDocumentWithDownloadLink:
      example:
        downloadLink: downloadLink
        documentName: documentName
      properties:
        documentName:
          description: The name of the document.
          type: string
        downloadLink:
          description: The name of the document.
          type: string
      type: object
    TimeoffChange:
      example:
        date: 2000-01-23
        totalDuration: 5.962133916683182
        policyTypeDisplayName: policyTypeDisplayName
        changeReason: changeReason
        endDate: 2000-01-23
        changeType: Created
        employeeEmail: employeeEmail
        dailyHours: 1.4658129805029452
        employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hoursOnDate: 6
        type: days
        dayPortion: dayPortion
        requestId: 0
        startPortion: startPortion
        employeeDisplayName: employeeDisplayName
        durationUnit: days
        endPortion: endPortion
        startDate: 2000-01-23
        totalCost: 5.637376656633329
      properties:
        changeType:
          description: "Change type - created, canceled or deleted."
          enum:
          - Created
          - Canceled
          - Deleted
          type: string
        employeeId:
          description: Employee ID
          format: uuid
          type: string
        employeeDisplayName:
          description: Employee display name.
          type: string
        employeeEmail:
          description: Employee email address.
          type: string
        requestId:
          description: TimeOff Request ID.
          type: integer
        policyTypeDisplayName:
          description: Display name of the policy type.
          type: string
        type:
          description: The type of request duration.<br> <b>portionOnRange</b> is
            when the request is for every morning or every afternoon during the days
            requested.<br> <b>hoursOnRange</b> is when the request is for X hours
            every day during the days requested.
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          type: string
        startDate:
          description: Date of the first day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        startPortion:
          description: "What portion of the first day is included - all_day, morning\
            \ or afternoon (relevant for requests using the Days type)."
          type: string
        endDate:
          description: Date of the last day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        endPortion:
          description: "What portion of the last day is included - all_day, morning\
            \ or afternoon (relevant for requests using the Days type)."
          type: string
        dayPortion:
          description: What portion of the request's days is included - morning or
            afternoon (relevant for requests using the portionOnRange type).
          type: string
        date:
          description: Date of the time off (relevant for requests using the Hours
            type)
          format: date
          type: string
        hoursOnDate:
          description: The time off duration in hours for the date (relevant for requests
            using the Hours type).
          type: integer
        dailyHours:
          description: The time off duration in hours for every day in the request
            (relevant for requests using the hoursOnRange type)
          type: number
        durationUnit:
          description: The unit used for the totalDuration and totalCost - either
            'days' or 'hours'
          enum:
          - days
          - hours
          type: string
        totalDuration:
          description: "The total amount of time the request covers, including regular\
            \ days off such as weekends"
          type: number
        totalCost:
          description: The amount that will be deducted from the balance
          type: number
        changeReason:
          description: Request change reason
          type: string
      type: object
    TimeoffChanges:
      example:
        changes:
        - date: 2000-01-23
          totalDuration: 5.962133916683182
          policyTypeDisplayName: policyTypeDisplayName
          changeReason: changeReason
          endDate: 2000-01-23
          changeType: Created
          employeeEmail: employeeEmail
          dailyHours: 1.4658129805029452
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hoursOnDate: 6
          type: days
          dayPortion: dayPortion
          requestId: 0
          startPortion: startPortion
          employeeDisplayName: employeeDisplayName
          durationUnit: days
          endPortion: endPortion
          startDate: 2000-01-23
          totalCost: 5.637376656633329
        - date: 2000-01-23
          totalDuration: 5.962133916683182
          policyTypeDisplayName: policyTypeDisplayName
          changeReason: changeReason
          endDate: 2000-01-23
          changeType: Created
          employeeEmail: employeeEmail
          dailyHours: 1.4658129805029452
          employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hoursOnDate: 6
          type: days
          dayPortion: dayPortion
          requestId: 0
          startPortion: startPortion
          employeeDisplayName: employeeDisplayName
          durationUnit: days
          endPortion: endPortion
          startDate: 2000-01-23
          totalCost: 5.637376656633329
      properties:
        changes:
          items:
            $ref: '#/components/schemas/TimeoffChange'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    SubmitTimeoffRequest:
      example:
        approver: approver
        hours: 0
        requestRangeType: days
        endDate: 2000-01-23
        minutes: 6
        description: description
        endDatePortion: all_day
        dailyHours: 1
        dailyMinutes: 5
        skipManagerApproval: false
        startDatePortion: all_day
        dayPortion: morning
        policyType: policyType
        reasonCode: 5
        startDate: 2000-01-23
      properties:
        description:
          description: Request reason.
          type: string
        policyType:
          description: "Request policy type, e.g. Holiday, Sick or any custom type\
            \ defined."
          type: string
        requestRangeType:
          default: days
          description: The type of request duration.<br> Select <b>hours</b> when
            the request is for X hours during the day requested (This is supported
            only for policy types measured in hours).<br> Select <b>portionOnRange</b>
            when the  request is for every morning or every afternoon during the days
            requested.<br> Select <b>hoursOnRange</b> when the request is for X hours
            every day during the days requested (This is supported only for policy
            types measured in hours)
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          example: days
          type: string
          x-konfig-original-example: days
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-requestRangeType
        startDate:
          description: Date of the first day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        startDatePortion:
          default: all_day
          description: Portion of the first day - relevant for requests in days.
          enum:
          - all_day
          - morning
          - afternoon
          example: all_day
          type: string
          x-konfig-original-example: all_day
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-startDatePortion
        endDate:
          description: |-
            Date of the last day of the time off (not relevant for requests using
                                                           the hours type).
          format: date
          type: string
        hours:
          description: This field is mandatory if the requestRangeType is set to 'hours'.
          type: integer
        minutes:
          description: Relevant if requestRangeType is set to 'hours'.
          type: integer
        endDatePortion:
          default: all_day
          description: Portion of the last day - relevant for requests in days.
          enum:
          - all_day
          - morning
          - afternoon
          example: all_day
          type: string
          x-konfig-original-example: all_day
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-endDatePortion
        dayPortion:
          description: Select <b>morning</b> when the request is for mornings on the
            days requested. Select <b>afternoon</b> when the request is for afternoons
            on the days requested.<br> This is mandatory if the <b>requestRangeType</b>
            is <b>portionOnRange</b>.
          enum:
          - morning
          - afternoon
          type: string
        dailyHours:
          description: Enter the number of hours when the request is for X hours on
            the days requested.<br> This is mandatory if the <b>requestRangeType</b>
            is <b>hoursOnRange</b>.
          type: integer
        dailyMinutes:
          description: Enter the number of minutes when the request is for X hours
            and X minutes on the days requested.<br> This is relevant if the <b>requestRangeType</b>
            is <b>hoursOnRange</b> and the amount requested is not a full hour or
            hours.
          type: integer
        skipManagerApproval:
          default: false
          description: Admins only can skip the approval policy. Setting this field
            to true will create an approved request.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-skipManagerApproval
        approver:
          description: The employee ID of the user to be set as the approver for this
            request. This is relevant if 'skipManagerApproval' is set to true.<br>Please
            note that the user calling the API with this param must have permission
            to import time off requests.
          type: string
        reasonCode:
          description: "The reason code ID taken from the policy type's reason codes\
            \ list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes"
          type: integer
      required:
      - policyType
      - startDate
      type: object
    SubmitTimeoffRequestDiffHours:
      example:
        approver: "3452152476387906847"
        endDate: 2024-01-05T00:00:00.000+00:00
        policyType: Holiday
        description: Vacation
        durations:
        - date: 2024-01-03
          hours: 0
          minutes: 15
        - date: 2024-01-04
          hours: 0
          minutes: 0
        - date: 2024-01-05
          hours: 2
          minutes: 45
        reasonCode: 3000
        skipManagerApproval: false
        startDate: 2024-01-03T00:00:00.000+00:00
      properties:
        description:
          description: Request reason.
          example: Vacation
          type: string
          x-konfig-original-example: Vacation
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-description
        policyType:
          description: "Request policy type, e.g. Holiday, Sick or any custom type\
            \ defined."
          example: Holiday
          type: string
          x-konfig-original-example: Holiday
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-policyType
        startDate:
          description: Date of the first day of the time off
          example: 2024-01-03
          format: date
          type: string
          x-konfig-original-example: 2024-01-03
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-startDate
        endDate:
          description: Date of the last day of the time off.
          example: 2024-01-05
          format: date
          type: string
          x-konfig-original-example: 2024-01-05
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-endDate
        durations:
          description: Array of durations for each day in the request.
          example:
          - date: 2024-01-03
            hours: 0
            minutes: 15
          - date: 2024-01-04
            hours: 0
            minutes: 0
          - date: 2024-01-05
            hours: 2
            minutes: 45
          items:
            $ref: '#/components/schemas/SubmitTimeoffRequestDiffHours_durations_inner'
          type: array
          x-konfig-original-example:
          - date: 2024-01-03
            hours: 0
            minutes: 15
          - date: 2024-01-04
            hours: 0
            minutes: 0
          - date: 2024-01-05
            hours: 2
            minutes: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-durations
        skipManagerApproval:
          default: false
          description: Admins only can skip the approval policy. Setting this field
            to true will create an approved request.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-skipManagerApproval
        approver:
          description: The employee ID of the user to be set as the approver for this
            request. This is relevant if 'skipManagerApproval' is set to true.<br>Please
            note that the user calling the API with this param must have permission
            to import time off requests.
          example: "3452152476387906847"
          type: string
          x-konfig-original-example: "3452152476387906847"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-approver
        reasonCode:
          description: "The reason code ID taken from the policy type's reason codes\
            \ list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes"
          example: 3000
          type: integer
          x-konfig-original-example: 3000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-reasonCode
      required:
      - durations
      - endDate
      - policyType
      - startDate
      type: object
    TimeoffRequest:
      example:
        date: 2000-01-23
        totalDuration: 5.962133916683182
        policyTypeDisplayName: policyTypeDisplayName
        attachmentLinks:
        - filename: filename
          mimeType: mimeType
          url: url
        - filename: filename
          mimeType: mimeType
          url: url
        endDate: 2000-01-23
        description: description
        endDatePortion: endDatePortion
        dailyHours: 1.4658129805029452
        employeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hoursOnDate: 6
        type: days
        startDatePortion: startDatePortion
        dayPortion: dayPortion
        approved: true
        hasAttachment: true
        requestId: 0
        durationUnit: days
        reasonCode: reasonCode
        startDate: 2000-01-23
        totalCost: 5.637376656633329
        status: status
      properties:
        description:
          description: The request description.
          type: string
        employeeId:
          description: Employee ID.
          format: uuid
          type: string
        requestId:
          description: Time Off Request ID.
          type: integer
        policyTypeDisplayName:
          description: Display name of the policy type.
          type: string
        type:
          description: The type of request duration.<br> <b>portionOnRange</b> is
            when the request is for every morning or every afternoon during the days
            requested.<br> <b>hoursOnRange</b> is when the request is for X hours
            every day during the days requested.
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          type: string
        startDate:
          description: Date of the first day of the time off  (not relevant for requests
            using the hours type).
          format: date
          type: string
        startDatePortion:
          description: "What portion of the first day is included - all_day, morning\
            \ or afternoon (relevant for requests using the Days type)."
          type: string
        endDate:
          description: |-
            Date of the last day of the time off (not relevant for requests using
                                                           the hours type).
          format: date
          type: string
        endDatePortion:
          description: "What portion of the last day is included - all_day, morning\
            \ or afternoon (relevant for requests using the Days type)."
          type: string
        dayPortion:
          description: What portion of the request's days is included - morning or
            afternoon (relevant for requests using the portionOnRange type).
          type: string
        approved:
          description: Whether the request is approved (and hence publicly visible).
          type: boolean
        date:
          description: Date of the time off (relevant for requests using the Hours
            type).
          format: date
          type: string
        hoursOnDate:
          description: The time off duration in hours for the date (relevant for requests
            using the Hours type)
          type: integer
        dailyHours:
          description: The time off duration in hours for every day in the request
            (relevant for requests using the hoursOnRange type).
          type: number
        durationUnit:
          description: The unit used for the totalDuration and totalCost - either
            'days' or 'hours'
          enum:
          - days
          - hours
          type: string
        totalDuration:
          description: "The total amount of time the request covers, including regular\
            \ days off such as weekends"
          type: number
        totalCost:
          description: The amount that will be deducted from the balance
          type: number
        status:
          description: "Request status. This can be approved, pending, canceled, etc."
          type: string
        hasAttachment:
          description: Whether the request has attachments
          type: boolean
        reasonCode:
          description: "The reason code taken from the policy type's reason codes\
            \ list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes"
          type: string
        attachmentLinks:
          description: Attachments with download links
          items:
            $ref: '#/components/schemas/TimeoffRequest_attachmentLinks_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    OnboardingWizards:
      example:
        wizards:
        - name: name
          id: 0.8008281904610115
        - name: name
          id: 0.8008281904610115
      properties:
        wizards:
          items:
            $ref: '#/components/schemas/OnboardingWizard'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    OnboardingWizard:
      example:
        name: name
        id: 0.8008281904610115
      properties:
        id:
          format: long
          type: number
        name:
          type: string
      type: object
    InvitationByWizard:
      example:
        welcomeWizardId: 0
      properties:
        welcomeWizardId:
          description: The Welcome wizard ID.
          type: integer
      required:
      - welcomeWizardId
      type: object
    UploadAvatar:
      example:
        url: url
      properties:
        url:
          description: The URL of the source of the avatar image.
          type: string
      required:
      - url
      type: object
    StartDateUpdate:
      example:
        reason: reason
        startDate: 2000-01-23
      properties:
        startDate:
          description: The date this entry becomes effective.
          format: date
          type: string
        reason:
          description: Additional info for the start date update.
          type: string
      required:
      - startDate
      type: object
    Task:
      example:
        set: set
        description: description
        id: 0.8008281904610115
        title: title
      properties:
        title:
          type: string
        description:
          type: string
        id:
          format: long
          type: number
        set:
          type: string
      type: object
    Tasks:
      example:
        tasks:
        - set: set
          description: description
          id: 0.8008281904610115
          title: title
        - set: set
          description: description
          id: 0.8008281904610115
          title: title
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Report:
      example:
        name: name
        id: 0.8008281904610115
      properties:
        id:
          format: long
          type: number
        name:
          type: string
      type: object
    Reports:
      example:
        views:
        - name: name
          id: 0.8008281904610115
        - name: name
          id: 0.8008281904610115
      properties:
        views:
          items:
            $ref: '#/components/schemas/Report'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    ChangeEmail:
      example:
        email: email
      properties:
        email:
          description: new email
          type: string
      type: object
    AddDocument:
      example:
        documentUrl: documentUrl
        documentName: documentName
        tags:
        - tags
        - tags
      properties:
        tags:
          description: Tags to.
          items:
            type: string
          type: array
        documentName:
          description: Document name.
          type: string
        documentUrl:
          description: URL of the document to upload.
          type: string
      type: object
    Error:
      properties:
        key:
          description: The unique identifier of the error.
          type: string
        error:
          description: A human readable error message.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ImportAttendanceData:
      example:
        idType: idType
        dateTimeFormat: yyyy-MM-dd hh:mm a
        requests:
        - clockOut: 2022-06-12T17:00
          id: "12356733644"
          clockIn: 2022-06-12T08:00
        - clockOut: 2022-06-12T17:00
          id: "12356733644"
          clockIn: 2022-06-12T08:00
      properties:
        idType:
          description: "The ID type used to identify the employee. Can be one of:\
            \ \"bobId\", \"email\", \"idInCompany\", or a custom field.<br/>For <b>custom\
            \ fields</b> a forward slash separator should be used.<br/>In order to\
            \ use a specific custom field to identify an employee, for example a custom\
            \ field called \"Payroll integration ID\":<ul><li>Query the field name\
            \ via the <a href='https://apidocs.hibob.com/reference/get_company-people-fields'>\"\
            Get all company fields\"</a></li><li>In the response the name will look\
            \ like <b>\"identification.custom.Payroll Integration ID_1RNhIIf\"</b></li><li>The\
            \ value to use should be: <b>\"/identification/custom/Payroll Integration\
            \ ID_1RNhI\"</b></li></ul>"
          type: string
        requests:
          description: List of attendance events
          items:
            $ref: '#/components/schemas/ImportAttendanceEvent'
          type: array
        dateTimeFormat:
          description: Allows to set custom date format for the date-time values sent
            in the requests
          example: yyyy-MM-dd hh:mm a
          type: string
          x-konfig-original-example: yyyy-MM-dd hh:mm a
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceData-properties-dateTimeFormat
      required:
      - idType
      - requests
      type: object
    ImportAttendanceEvent:
      description: "An event indicating clock-in, clock-out or both"
      example:
        clockOut: 2022-06-12T17:00
        id: "12356733644"
        clockIn: 2022-06-12T08:00
      properties:
        id:
          description: The id value to identify the customer by. Will fetch the employee
            based on the field (type) selected in <i>idType</i>.
          example: "12356733644"
          type: string
          x-konfig-original-example: "12356733644"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-id
        clockIn:
          description: The timestamp to log as a clock-in date-time in local time
          example: 2022-06-12T08:00
          type: string
          x-konfig-original-example: 2022-06-12T08:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-clockIn
        clockOut:
          description: The timestamp to log as a clock-out date-time in local time.
          example: 2022-06-12T17:00
          type: string
          x-konfig-original-example: 2022-06-12T17:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-clockOut
      required:
      - id
      type: object
    ImportAttendanceResponse:
      example:
        total: 140
        imported: 137
        notImported: 3
        errors:
        - Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534 is invalid
        - "Invalid employee Id: ABCD12345567"
        - Cannot find employee for id 5986745
        status: success
      properties:
        status:
          description: Import status
          enum:
          - success
          - failed
          - partial_success
          type: string
        total:
          description: Total number of clock-in and clock-out events received
          example: 140
          type: number
          x-konfig-original-example: 140
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-total
        imported:
          description: Number of clock-in/clock-out events imported
          example: 137
          type: number
          x-konfig-original-example: 137
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-imported
        notImported:
          description: Number of clock-in/clock-out events which were not imported
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-notImported
        errors:
          description: List of all errors received in the process
          example:
          - Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534 is invalid
          - "Invalid employee Id: ABCD12345567"
          - Cannot find employee for id 5986745
          items:
            type: string
          type: array
          x-konfig-original-example:
          - Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534 is invalid
          - "Invalid employee Id: ABCD12345567"
          - Cannot find employee for id 5986745
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-errors
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomTableColumn:
      example:
        name: name
        description: description
        id: id
        type: type
        typeData:
          listId: listId
        mandatory: true
      properties:
        description:
          description: The description of the column
          type: string
        id:
          description: The ID of the column
          type: string
        name:
          description: The name of the column
          type: string
        mandatory:
          description: Flag which means that column must be present during creation
            and its value can't be null during update
          type: boolean
        type:
          description: "The type of the column. Supported column types: text, text-area,\
            \ number, date, list, multi-list, hierarchy-list, currency, employee-reference,\
            \ document."
          type: string
        typeData:
          $ref: '#/components/schemas/Field_typeData'
      type: object
    CustomTableMetadata:
      example:
        columns:
        - name: name
          description: description
          id: id
          type: type
          typeData:
            listId: listId
          mandatory: true
        - name: name
          description: description
          id: id
          type: type
          typeData:
            listId: listId
          mandatory: true
        name: name
        description: description
        id: id
        category: category
      properties:
        description:
          description: The description of custom table
          type: string
        id:
          description: The identifier of custom table
          type: string
        category:
          description: The ID of the category to which the custom table belongs
          type: string
        name:
          description: The name of custom table
          type: string
        columns:
          items:
            $ref: '#/components/schemas/CustomTableColumn'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomTableMetadataList:
      example:
        tables:
        - columns:
          - name: name
            description: description
            id: id
            type: type
            typeData:
              listId: listId
            mandatory: true
          - name: name
            description: description
            id: id
            type: type
            typeData:
              listId: listId
            mandatory: true
          name: name
          description: description
          id: id
          category: category
        - columns:
          - name: name
            description: description
            id: id
            type: type
            typeData:
              listId: listId
            mandatory: true
          - name: name
            description: description
            id: id
            type: type
            typeData:
              listId: listId
            mandatory: true
          name: name
          description: description
          id: id
          category: category
      properties:
        tables:
          items:
            $ref: '#/components/schemas/CustomTableMetadata'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomTableEntriesList:
      example:
        values:
        - values:
          - column_1663598152485: 5185395
            column_1663598024920: 2022-09-30
            column_1663598120787: "2871255975417872769"
            column_1663598037763: 123456
            column_1663598145154: 371223
            column_1663597977169: text text
            column_1663597992534: text area text area text area
            column_1663598108167:
              value: 240
              currency: USD
            id: 1021262
            column_1663598062584: "252614471"
            column_1663598090762:
            - "252614475"
            - "252614476"
            humanReadable:
              column_1663597992534: text area text area text area
              column_1663598090762: "B,A"
              column_1663598108167: $240.00
              column_1663598145154: B \ 3
              column_1663598062584: C
              column_1663598152485: "5185395"
              column_1663597977169: text text
              column_1663598037763: "123456"
              column_1663598024920: 30/09/2022
              column_1663598120787: Austin Legge
        - values:
          - column_1663598152485: 5185395
            column_1663598024920: 2022-09-30
            column_1663598120787: "2871255975417872769"
            column_1663598037763: 123456
            column_1663598145154: 371223
            column_1663597977169: text text
            column_1663597992534: text area text area text area
            column_1663598108167:
              value: 240
              currency: USD
            id: 1021262
            column_1663598062584: "252614471"
            column_1663598090762:
            - "252614475"
            - "252614476"
            humanReadable:
              column_1663597992534: text area text area text area
              column_1663598090762: "B,A"
              column_1663598108167: $240.00
              column_1663598145154: B \ 3
              column_1663598062584: C
              column_1663598152485: "5185395"
              column_1663597977169: text text
              column_1663598037763: "123456"
              column_1663598024920: 30/09/2022
              column_1663598120787: Austin Legge
      properties:
        values:
          items:
            $ref: '#/components/schemas/CustomTableEntry'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomTableEntry:
      description: "The row data depends on what is defined in the table's schema,\
        \ use HiBob Custom Table Metadata API to get list of defined columns. The\
        \ only property that's always present is ID."
      example:
        values:
        - column_1663598152485: 5185395
          column_1663598024920: 2022-09-30
          column_1663598120787: "2871255975417872769"
          column_1663598037763: 123456
          column_1663598145154: 371223
          column_1663597977169: text text
          column_1663597992534: text area text area text area
          column_1663598108167:
            value: 240
            currency: USD
          id: 1021262
          column_1663598062584: "252614471"
          column_1663598090762:
          - "252614475"
          - "252614476"
          humanReadable:
            column_1663597992534: text area text area text area
            column_1663598090762: "B,A"
            column_1663598108167: $240.00
            column_1663598145154: B \ 3
            column_1663598062584: C
            column_1663598152485: "5185395"
            column_1663597977169: text text
            column_1663598037763: "123456"
            column_1663598024920: 30/09/2022
            column_1663598120787: Austin Legge
      properties:
        id:
          description: The ID of the row
          type: number
      type: object
      x-konfig-original-example:
        values:
        - column_1663598152485: 5185395
          column_1663598024920: 2022-09-30
          column_1663598120787: "2871255975417872769"
          column_1663598037763: 123456
          column_1663598145154: 371223
          column_1663597977169: text text
          column_1663597992534: text area text area text area
          column_1663598108167:
            value: 240
            currency: USD
          id: 1021262
          column_1663598062584: "252614471"
          column_1663598090762:
          - "252614475"
          - "252614476"
          humanReadable:
            column_1663597992534: text area text area text area
            column_1663598090762: "B,A"
            column_1663598108167: $240.00
            column_1663598145154: B \ 3
            column_1663598062584: C
            column_1663598152485: "5185395"
            column_1663597977169: text text
            column_1663598037763: "123456"
            column_1663598024920: 30/09/2022
            column_1663598120787: Austin Legge
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CustomTableEntry
    ObjectsMetadata:
      example:
        name: name
        description: description
        jsonPath:
          root: root
          rawData: rawData
        id: id
        fieldType:
          type: type
          typeData:
            listId: listId
      properties:
        description:
          description: Description of the field.
          type: string
        id:
          description: ID of the field.
          type: string
        name:
          description: Name of the field.
          type: string
        fieldType:
          $ref: '#/components/schemas/ObjectsMetadata_fieldType'
        jsonPath:
          $ref: '#/components/schemas/ObjectsMetadata_jsonPath'
      type: object
      x-konfig-is-used-in-successful-response: true
    GetPositionsRequest:
      example:
        includeHumanReadable: false
        filters:
        - values:
          - values
          - values
          operator: operator
          fieldId: fieldId
        - values:
          - values
          - values
          operator: operator
          fieldId: fieldId
        fields:
        - fields
        - fields
      properties:
        fields:
          description: "Array of field ids (paths) to fetch for the positions.<br\
            \ /> Minimum 1 up to 50 fields. Any invalid number of fields will get\
            \ a response of 400 HTTP error.<br /> You can include only the field ids\
            \ listed in the [Positions Fields Metadata API](https://apidocs.hibob.com/reference/get_metadata-objects-position)."
          items:
            type: string
          type: array
        filters:
          items:
            $ref: '#/components/schemas/FilterInstruction'
          type: array
        includeHumanReadable:
          default: false
          description: Whether to include the additional "humanReadable" entry in
            the response.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetPositionsRequest-properties-includeHumanReadable
      required:
      - fields
      - filters
      type: object
    FilterInstruction:
      example:
        values:
        - values
        - values
        operator: operator
        fieldId: fieldId
      properties:
        fieldId:
          description: "The field id (path) to filter by.<br /> Supported fields:\
            \ “/position/status”, \"/position/name\".<br />Any other path will get\
            \ a response of 400 HTTP error."
          type: string
        operator:
          description: "Supported operators: “equals”, \"notEqual\".<br />Any other\
            \ operator will get a response of 400 HTTP error."
          type: string
        values:
          description: List of values to compare.<br />Empty list will result in 400
            HTTP error.
          items:
            type: string
          type: array
      required:
      - fieldId
      - operator
      - values
    PositionEntries:
      items:
        $ref: '#/components/schemas/PositionEntries_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    PeopleUpdateEmployeeRecordRequest:
      example:
        firstName: Bob
        personal:
          birthDate: 2002-01-01
        about:
          hobbies:
          - music
          - travel
          - sport
      properties:
        firstName:
          example: Bob
          type: string
          x-konfig-original-example: Bob
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-firstName
        personal:
          $ref: '#/components/schemas/PeopleUpdateEmployeeRecordRequest_personal'
        about:
          $ref: '#/components/schemas/PeopleUpdateEmployeeRecordRequest_about'
      type: object
      x-konfig-original-example:
        firstName: Bob
        personal:
          birthDate: 2002-01-01
        about:
          hobbies:
          - music
          - travel
          - sport
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest
    DocumentsUploadToSharedFolderRequest:
      properties:
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
    DocumentsUploadConfidentialFileRequest:
      properties:
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
    CustomTablesCreateNewEntryRequest:
      example:
        RAW_BODY: RAW_BODY
      properties:
        RAW_BODY:
          type: string
      type: object
    CustomTablesUpdateEntryRequest:
      example:
        column_1663598152485: 5185395
        column_1663598024920: 2022-09-30
        column_1663598120787: "2871255975417872769"
        column_1663598145154: 371223
        column_1663597977169: text text
        column_1663597992534: text area text area text area
        column_1663598108167:
          value: 240
          currency: USD
        column_1663598062584: "252614471"
        column_1663598090762:
        - "252614475"
        - "252614476"
      properties:
        RAW_BODY:
          type: string
      type: object
      x-konfig-original-example:
        column_1663598152485: 5185395
        column_1663598024920: 2022-09-30
        column_1663598120787: "2871255975417872769"
        column_1663598145154: 371223
        column_1663597977169: text text
        column_1663597992534: text area text area text area
        column_1663598108167:
          value: 240
          currency: USD
        column_1663598062584: "252614471"
        column_1663598090762:
        - "252614475"
        - "252614476"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CustomTablesUpdateEntryRequest
    ReportsDownloadByIdResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    ReportsDownloadReportFileResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--people-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--people-get-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--people-identifier-get-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--people-identifier-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--company-named-lists-get-parameters-0-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--company-named-lists-listName-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-requests-changes-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-whosout-get-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-whosout-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-whosout-get-parameters-4-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-outtoday-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--timeoff-outtoday-get-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--people-custom-tables-employee_id-custom_table_id-get-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReadEmployeesRequestReference-properties-fields:
      example:
      - root.id
      - root.firstName
      - root.surname
      - root.email
      - work.site
      - work.department
      items:
        example: root.id
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReadSingleEmployeeRequestReference-properties-fields:
      example:
      - root.id
      - root.firstName
      - root.surname
      - root.email
      - work.site
      - work.department
      items:
        example: root.id
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeFilter-properties-fieldPath:
      example: root.id
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeFilter-properties-operator:
      example: equals
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeFilter-properties-values:
      example:
      - employeeId1
      - employeeId2
      - employeeId3
      items:
        example: employeeId1
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination:
      example:
        terminationDate: 2025-09-23
        noticePeriod:
          unit: days
          length: 30
        lastDayOfWork: 2025-09-22
        terminationReason: Redundant
        reasonType: End of Contract
      properties:
        terminationDate:
          example: 2025-09-23
          type: string
        noticePeriod:
          properties:
            unit:
              example: days
              type: string
            length:
              example: 30
              type: number
          type: object
        lastDayOfWork:
          example: 2025-09-22
          type: string
        terminationReason:
          example: Redundant
          type: string
        reasonType:
          example: End of Contract
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationDate:
      example: 2025-09-23
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationReason:
      example: Redundant
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-reasonType:
      example: End of Contract
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-unit:
      example: days
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-length:
      example: 30
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeTermination-properties-lastDayOfWork:
      example: 2025-09-22
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-requestRangeType:
      example: days
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-startDatePortion:
      example: all_day
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-endDatePortion:
      example: all_day
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-skipManagerApproval:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-description:
      example: Vacation
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-policyType:
      example: Holiday
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-startDate:
      example: 2024-01-03
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-endDate:
      example: 2024-01-05
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-durations:
      example:
      - date: 2024-01-03
        hours: 0
        minutes: 15
      - date: 2024-01-04
        hours: 0
        minutes: 0
      - date: 2024-01-05
        hours: 2
        minutes: 45
      items:
        properties:
          date:
            example: 2024-01-03
            type: string
          hours:
            example: 0
            type: number
          minutes:
            example: 15
            type: number
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-skipManagerApproval:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-approver:
      example: "3452152476387906847"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-reasonCode:
      example: 3000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceData-properties-dateTimeFormat:
      example: yyyy-MM-dd hh:mm a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-id:
      example: "12356733644"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-clockIn:
      example: 2022-06-12T08:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceEvent-properties-clockOut:
      example: 2022-06-12T17:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-total:
      example: 140
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-imported:
      example: 137
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-notImported:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ImportAttendanceResponse-properties-errors:
      example:
      - Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534 is invalid
      - "Invalid employee Id: ABCD12345567"
      - Cannot find employee for id 5986745
      items:
        example: Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534
          is invalid
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CustomTableEntry:
      example:
        values:
        - column_1663598152485: 5185395
          column_1663598024920: 2022-09-30
          column_1663598120787: "2871255975417872769"
          column_1663598037763: 123456
          column_1663598145154: 371223
          column_1663597977169: text text
          column_1663597992534: text area text area text area
          column_1663598108167:
            value: 240
            currency: USD
          id: 1021262
          column_1663598062584: "252614471"
          column_1663598090762:
          - "252614475"
          - "252614476"
          humanReadable:
            column_1663597992534: text area text area text area
            column_1663598090762: "B,A"
            column_1663598108167: $240.00
            column_1663598145154: B \ 3
            column_1663598062584: C
            column_1663598152485: "5185395"
            column_1663597977169: text text
            column_1663598037763: "123456"
            column_1663598024920: 30/09/2022
            column_1663598120787: Austin Legge
      properties:
        values:
          items:
            properties:
              column_1663598152485:
                example: 5185395
                type: number
              column_1663598024920:
                example: 2022-09-30
                type: string
              column_1663598120787:
                example: "2871255975417872769"
                type: string
              column_1663598037763:
                example: 123456
                type: number
              column_1663598145154:
                example: 371223
                type: number
              column_1663597977169:
                example: text text
                type: string
              column_1663597992534:
                example: text area text area text area
                type: string
              column_1663598108167:
                properties:
                  value:
                    example: 240
                    type: number
                  currency:
                    example: USD
                    type: string
                type: object
              id:
                example: 1021262
                type: number
              column_1663598062584:
                example: "252614471"
                type: string
              column_1663598090762:
                items:
                  example: "252614475"
                  type: string
                type: array
              humanReadable:
                properties:
                  column_1663597992534:
                    example: text area text area text area
                    type: string
                  column_1663598090762:
                    example: "B,A"
                    type: string
                  column_1663598108167:
                    example: $240.00
                    type: string
                  column_1663598145154:
                    example: B \ 3
                    type: string
                  column_1663598062584:
                    example: C
                    type: string
                  column_1663598152485:
                    example: "5185395"
                    type: string
                  column_1663597977169:
                    example: text text
                    type: string
                  column_1663598037763:
                    example: "123456"
                    type: string
                  column_1663598024920:
                    example: 30/09/2022
                    type: string
                  column_1663598120787:
                    example: Austin Legge
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetPositionsRequest-properties-includeHumanReadable:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest:
      example:
        firstName: Bob
        personal:
          birthDate: 2002-01-01
        about:
          hobbies:
          - music
          - travel
          - sport
      properties:
        firstName:
          example: Bob
          type: string
        personal:
          properties:
            birthDate:
              example: 2002-01-01
              type: string
          type: object
        about:
          properties:
            hobbies:
              items:
                example: music
                type: string
              type: array
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-firstName:
      example: Bob
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-personal-properties-birthDate:
      example: 2002-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-about-properties-hobbies-items:
      example: music
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CustomTablesUpdateEntryRequest:
      example:
        column_1663598152485: 5185395
        column_1663598024920: 2022-09-30
        column_1663598120787: "2871255975417872769"
        column_1663598145154: 371223
        column_1663597977169: text text
        column_1663597992534: text area text area text area
        column_1663598108167:
          value: 240
          currency: USD
        column_1663598062584: "252614471"
        column_1663598090762:
        - "252614475"
        - "252614476"
      properties:
        column_1663598152485:
          example: 5185395
          type: number
        column_1663598024920:
          example: 2022-09-30
          type: string
        column_1663598120787:
          example: "2871255975417872769"
          type: string
        column_1663598145154:
          example: 371223
          type: number
        column_1663597977169:
          example: text text
          type: string
        column_1663597992534:
          example: text area text area text area
          type: string
        column_1663598108167:
          properties:
            value:
              example: 240
              type: number
            currency:
              example: USD
              type: string
          type: object
        column_1663598062584:
          example: "252614471"
          type: string
        column_1663598090762:
          items:
            example: "252614475"
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-post--people-search:
      properties:
        fields:
          description: |-
            Optional array of employee field paths that's are required in response. If you don't specify fields - only basic fields and categories are returned: <br/><b>Basic fields:</b>  <ul>
                                  <li>ID</li>
                                  <li>Company ID</li>
                                  <li>Email</li>
                                  <li>First name</li>
                                  <li>Last name</li>
                                  <li>Display name</li>
                                  <li>Middle name</li>
                                  <li>Creation timestamp</li>
                                  <li>Avatar URL</li>
            </ul> <br/><b>Basic Categories:</b> <ul>
                                  <li>About</li>
                                  <li>Employment</li>
                                  <li>Work</li>
            </ul>
          example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          items:
            type: string
          type: array
          x-konfig-original-example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadEmployeesRequestReference-properties-fields
        filters:
          description: Optional list of filters for filtering employees. We currently
            support up to one filter.
          items:
            $ref: '#/components/schemas/EmployeeFilter'
          type: array
        showInactive:
          description: <br>Optional field. <br>Default value = false. <br>Defines
            whether response should include inactive employees.
          type: boolean
        humanReadable:
          description: "Optional field.  <br> <b>If not sent:</b> supply machine-readable\
            \ values only. <br> <br> Possible values: <br>  <br> <b>APPEND</b> - include\
            \ the additional \"humanReadable\" JSON node in the response. <br>  <br>\
            \ <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable\
            \ format. <br>"
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--people:
      properties:
        showInactive:
          type: boolean
        humanReadable:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-get-parameters-1-schema
        includeHumanReadable:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-get-parameters-2-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - showInactive
      - humanReadable
      - includeHumanReadable
    konfig-generated-schema-single-parameter-schema-post--people:
      properties:
        firstName:
          description: Employee's first name.
          type: string
        surname:
          description: Employee's surname.
          type: string
        email:
          description: Employee's email address.
          format: email
          type: string
        work:
          properties:
            site:
              description: The employee's site.
              type: string
            startDate:
              description: The employee's employment start date
              format: date
              type: string
          required:
          - site
          - startDate
          type: object
      required:
      - email
      - firstName
      - surname
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--people-identifier:
      properties:
        identifier:
          format: string
          type: string
        fields:
          items:
            type: string
          type: array
        humanReadable:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-identifier-get-parameters-2-schema
        includeHumanReadable:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-identifier-get-parameters-3-schema
      required:
      - fields
      - identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identifier
      - fields
      - humanReadable
      - includeHumanReadable
    konfig-generated-schema-single-parameter-schema-post--people-identifier:
      properties:
        identifier:
          format: string
          type: string
        fields:
          description: |-
            Optional array of employee field paths that's are required in response. If you don't specify fields - only basic fields and categories are returned: <br/><b>Basic fields:</b>  <ul>
                                  <li>ID</li>
                                  <li>Company ID</li>
                                  <li>Email</li>
                                  <li>First name</li>
                                  <li>Last name</li>
                                  <li>Display name</li>
                                  <li>Middle name</li>
                                  <li>Creation timestamp</li>
                                  <li>Avatar URL</li>
            </ul> <br/><b>Basic Categories:</b> <ul>
                                  <li>About</li>
                                  <li>Employment</li>
                                  <li>Work</li>
            </ul>
          example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          items:
            type: string
          type: array
          x-konfig-original-example:
          - root.id
          - root.firstName
          - root.surname
          - root.email
          - work.site
          - work.department
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadSingleEmployeeRequestReference-properties-fields
        humanReadable:
          description: "Optional field.  <br> <b>If not sent:</b> supply machine-readable\
            \ values only. <br> <br> Possible values: <br>  <br> <b>APPEND</b> - include\
            \ the additional \"humanReadable\" JSON node in the response. <br>  <br>\
            \ <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable\
            \ format. <br>"
          type: string
      required:
      - identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identifier
    konfig-generated-schema-single-parameter-schema-put--people-identifier:
      properties:
        identifier:
          format: string
          type: string
        firstName:
          example: Bob
          type: string
          x-konfig-original-example: Bob
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-firstName
        personal:
          properties:
            birthDate:
              example: 2002-01-01
              type: string
              x-konfig-original-example: 2002-01-01
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-personal-properties-birthDate
          type: object
        about:
          properties:
            hobbies:
              items:
                example: music
                type: string
                x-konfig-original-example: music
                x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-about-properties-hobbies-items
              type: array
          type: object
      required:
      - identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identifier
    konfig-generated-schema-single-parameter-schema-post--employees-identifier-uninvite:
      properties:
        identifier:
          format: string
          type: string
      required:
      - identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identifier
    konfig-generated-schema-single-parameter-schema-post--employees-identifier-terminate:
      properties:
        identifier:
          format: string
          type: string
        terminationDate:
          description: The employee's termination date
          example: 2025-09-23
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationDate
        terminationReason:
          description: The ID of the 'terminationReason' list entry
          example: Redundant
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-terminationReason
        reasonType:
          description: The ID of the 'lifecycleReasonType' list entry
          example: End of Contract
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-reasonType
        noticePeriod:
          description: Notice period length
          properties:
            unit:
              enum:
              - days
              - weeks
              - month
              - years
              example: days
              type: string
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-unit
            length:
              example: 30
              type: integer
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-length
          type: object
        lastDayOfWork:
          example: 2025-09-22
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-lastDayOfWork
      required:
      - identifier
      - terminationDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identifier
    konfig-generated-schema-single-parameter-schema-get--onboarding-wizards:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--employees-employeeId-invitations:
      properties:
        employeeId:
          format: string
          type: string
        welcomeWizardId:
          description: The Welcome wizard ID.
          type: integer
      required:
      - employeeId
      - welcomeWizardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeId
    konfig-generated-schema-single-parameter-schema-post--employees-employeeId-start-date:
      properties:
        employeeId:
          format: string
          type: string
        startDate:
          description: The date this entry becomes effective.
          format: date
          type: string
        reason:
          description: Additional info for the start date update.
          type: string
      required:
      - employeeId
      - startDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--company-reports:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--company-reports-reportId-download:
      properties:
        reportId:
          format: long
          type: number
        format:
          enum:
          - csv
          - xlsx
          - json
          type: string
        includeInfo:
          format: boolean
          type: boolean
        locale:
          format: string
          type: string
        humanReadable:
          type: string
      required:
      - format
      - reportId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - reportId
      - format
      - includeInfo
      - locale
      - humanReadable
    konfig-generated-schema-single-parameter-schema-get--company-reports-reportId-download-async:
      properties:
        reportId:
          format: long
          type: number
        format:
          enum:
          - csv
          - xlsx
          type: string
        includeInfo:
          format: boolean
          type: boolean
        locale:
          format: string
          type: string
        humanReadable:
          type: string
      required:
      - format
      - reportId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - reportId
      - format
      - includeInfo
      - locale
      - humanReadable
    konfig-generated-schema-single-parameter-schema-get--company-reports-download-reportName:
      properties:
        reportName:
          type: string
      required:
      - reportName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - reportName
    konfig-generated-schema-single-parameter-schema-get--profiles:
      properties:
        sortBy:
          format: string
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sortBy
    konfig-generated-schema-single-parameter-schema-get--avatars:
      properties:
        email:
          format: string
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - email
    konfig-generated-schema-single-parameter-schema-get--avatars-employeeId:
      properties:
        employeeId:
          format: string
          type: string
      required:
      - employeeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeId
    konfig-generated-schema-single-parameter-schema-put--avatars-employeeId:
      properties:
        employeeId:
          type: string
        url:
          description: The URL of the source of the avatar image.
          type: string
      required:
      - employeeId
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeId
    konfig-generated-schema-single-parameter-schema-get--my-avatar:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tasks:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--my-tasks:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tasks-people-id:
      properties:
        id:
          format: string
          type: string
        task_status:
          enum:
          - open
          - closed
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - task_status
    konfig-generated-schema-single-parameter-schema-post--tasks-taskId-complete:
      properties:
        taskId:
          format: string
          type: string
      required:
      - taskId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - taskId
    konfig-generated-schema-single-parameter-schema-put--people-id-email:
      properties:
        id:
          type: string
        email:
          description: new email
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--company-named-lists:
      properties:
        includeArchived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--company-named-lists-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - includeArchived
    konfig-generated-schema-single-parameter-schema-get--company-named-lists-listName:
      properties:
        listName:
          type: string
        includeArchived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--company-named-lists-listName-get-parameters-1-schema
      required:
      - listName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - listName
      - includeArchived
    konfig-generated-schema-single-parameter-schema-post--company-named-lists-listName:
      properties:
        listName:
          type: string
        name:
          description: Name of the item.
          type: string
        parentId:
          description: ID of the new hierarchy parent node.
          type: integer
      required:
      - listName
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - listName
    konfig-generated-schema-single-parameter-schema-delete--company-named-lists-listName-itemId:
      properties:
        listName:
          type: string
        itemId:
          type: string
      required:
      - itemId
      - listName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - listName
      - itemId
    konfig-generated-schema-single-parameter-schema-put--company-named-lists-listName-itemId:
      properties:
        listName:
          type: string
        itemId:
          type: string
        name:
          description: Name of the item.
          type: string
        parentId:
          description: ID of the new hierarchy parent node.
          type: integer
      required:
      - itemId
      - listName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - listName
      - itemId
    konfig-generated-schema-single-parameter-schema-get--company-people-fields:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--company-people-fields:
      properties:
        description:
          description: The description of the field.
          type: string
        name:
          description: The name of the field.
          type: string
        category:
          description: The category of the field.
          type: string
        type:
          description: "The type of field. Supported field types: text, text-area,\
            \ number, date, list, multi-list, hierarchy-list, currency, employee-reference,\
            \ document."
          type: string
        historical:
          description: "When true, this field keeps the history of its values, each\
            \ being active starting from a certain date. The default value is false."
          type: string
      required:
      - category
      - name
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--company-people-fields-fieldId:
      properties:
        fieldId:
          type: string
      required:
      - fieldId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - fieldId
    konfig-generated-schema-single-parameter-schema-put--company-people-fields-fieldId:
      properties:
        fieldId:
          type: string
        description:
          description: The description of the field.
          type: string
        name:
          description: The name of the field.
          type: string
      required:
      - fieldId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - fieldId
    konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-requests:
      properties:
        id:
          type: string
        description:
          description: Request reason.
          type: string
        policyType:
          description: "Request policy type, e.g. Holiday, Sick or any custom type\
            \ defined."
          type: string
        requestRangeType:
          default: days
          description: The type of request duration.<br> Select <b>hours</b> when
            the request is for X hours during the day requested (This is supported
            only for policy types measured in hours).<br> Select <b>portionOnRange</b>
            when the  request is for every morning or every afternoon during the days
            requested.<br> Select <b>hoursOnRange</b> when the request is for X hours
            every day during the days requested (This is supported only for policy
            types measured in hours)
          enum:
          - days
          - hours
          - portionOnRange
          - hoursOnRange
          example: days
          type: string
          x-konfig-original-example: days
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-requestRangeType
        startDate:
          description: Date of the first day of the time off (not relevant for requests
            using the hours type).
          format: date
          type: string
        startDatePortion:
          default: all_day
          description: Portion of the first day - relevant for requests in days.
          enum:
          - all_day
          - morning
          - afternoon
          example: all_day
          type: string
          x-konfig-original-example: all_day
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-startDatePortion
        endDate:
          description: |-
            Date of the last day of the time off (not relevant for requests using
                                                           the hours type).
          format: date
          type: string
        hours:
          description: This field is mandatory if the requestRangeType is set to 'hours'.
          type: integer
        minutes:
          description: Relevant if requestRangeType is set to 'hours'.
          type: integer
        endDatePortion:
          default: all_day
          description: Portion of the last day - relevant for requests in days.
          enum:
          - all_day
          - morning
          - afternoon
          example: all_day
          type: string
          x-konfig-original-example: all_day
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-endDatePortion
        dayPortion:
          description: Select <b>morning</b> when the request is for mornings on the
            days requested. Select <b>afternoon</b> when the request is for afternoons
            on the days requested.<br> This is mandatory if the <b>requestRangeType</b>
            is <b>portionOnRange</b>.
          enum:
          - morning
          - afternoon
          type: string
        dailyHours:
          description: Enter the number of hours when the request is for X hours on
            the days requested.<br> This is mandatory if the <b>requestRangeType</b>
            is <b>hoursOnRange</b>.
          type: integer
        dailyMinutes:
          description: Enter the number of minutes when the request is for X hours
            and X minutes on the days requested.<br> This is relevant if the <b>requestRangeType</b>
            is <b>hoursOnRange</b> and the amount requested is not a full hour or
            hours.
          type: integer
        skipManagerApproval:
          default: false
          description: Admins only can skip the approval policy. Setting this field
            to true will create an approved request.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequest-properties-skipManagerApproval
        approver:
          description: The employee ID of the user to be set as the approver for this
            request. This is relevant if 'skipManagerApproval' is set to true.<br>Please
            note that the user calling the API with this param must have permission
            to import time off requests.
          type: string
        reasonCode:
          description: "The reason code ID taken from the policy type's reason codes\
            \ list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes"
          type: integer
      required:
      - id
      - policyType
      - startDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-diffHours-requests:
      properties:
        id:
          type: string
        description:
          description: Request reason.
          example: Vacation
          type: string
          x-konfig-original-example: Vacation
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-description
        policyType:
          description: "Request policy type, e.g. Holiday, Sick or any custom type\
            \ defined."
          example: Holiday
          type: string
          x-konfig-original-example: Holiday
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-policyType
        startDate:
          description: Date of the first day of the time off
          example: 2024-01-03
          format: date
          type: string
          x-konfig-original-example: 2024-01-03
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-startDate
        endDate:
          description: Date of the last day of the time off.
          example: 2024-01-05
          format: date
          type: string
          x-konfig-original-example: 2024-01-05
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-endDate
        durations:
          description: Array of durations for each day in the request.
          example:
          - date: 2024-01-03
            hours: 0
            minutes: 15
          - date: 2024-01-04
            hours: 0
            minutes: 0
          - date: 2024-01-05
            hours: 2
            minutes: 45
          items:
            properties:
              date:
                description: Date of the duration.
                format: date
                type: string
              hours:
                description: The number of hours in the duration.
                type: integer
              minutes:
                description: The number of minutes in the duration.
                type: integer
            required:
            - date
            - hours
            - minutes
            type: object
          type: array
          x-konfig-original-example:
          - date: 2024-01-03
            hours: 0
            minutes: 15
          - date: 2024-01-04
            hours: 0
            minutes: 0
          - date: 2024-01-05
            hours: 2
            minutes: 45
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-durations
        skipManagerApproval:
          default: false
          description: Admins only can skip the approval policy. Setting this field
            to true will create an approved request.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-skipManagerApproval
        approver:
          description: The employee ID of the user to be set as the approver for this
            request. This is relevant if 'skipManagerApproval' is set to true.<br>Please
            note that the user calling the API with this param must have permission
            to import time off requests.
          example: "3452152476387906847"
          type: string
          x-konfig-original-example: "3452152476387906847"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-approver
        reasonCode:
          description: "The reason code ID taken from the policy type's reason codes\
            \ list. The list is available in GET /timeoff/policy-types/{policyType}/reason-codes"
          example: 3000
          type: integer
          x-konfig-original-example: 3000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubmitTimeoffRequestDiffHours-properties-reasonCode
      required:
      - durations
      - endDate
      - id
      - policyType
      - startDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--timeoff-employees-id-requests-requestId:
      properties:
        id:
          type: string
        requestId:
          type: integer
      required:
      - id
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - requestId
    konfig-generated-schema-single-parameter-schema-get--timeoff-employees-id-requests-requestId:
      properties:
        id:
          type: string
        requestId:
          type: integer
      required:
      - id
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - requestId
    konfig-generated-schema-single-parameter-schema-get--timeoff-requests-changes:
      properties:
        since:
          format: date
          type: string
        includePending:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-requests-changes-get-parameters-1-schema
      required:
      - since
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - since
      - includePending
    konfig-generated-schema-single-parameter-schema-get--timeoff-whosout:
      properties:
        from:
          format: date
          type: string
        to:
          format: date
          type: string
        includeHourly:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-2-schema
        includePrivate:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-3-schema
        includePending:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-whosout-get-parameters-4-schema
      required:
      - from
      - to
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
      - includeHourly
      - includePrivate
      - includePending
    konfig-generated-schema-single-parameter-schema-get--timeoff-outtoday:
      properties:
        today:
          format: date
          type: string
        includeHourly:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-outtoday-get-parameters-1-schema
        includePrivate:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--timeoff-outtoday-get-parameters-2-schema
        siteId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - today
      - includeHourly
      - includePrivate
      - siteId
    konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types-policyType-reason-codes:
      properties:
        policyType:
          type: string
      required:
      - policyType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyType
    konfig-generated-schema-single-parameter-schema-post--timeoff-policy-types-policyType-reason-codes:
      properties:
        policyType:
          type: string
        reasonCodes:
          items:
            description: A list of reason codes.
            type: string
          type: array
      required:
      - policyType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyType
    konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types-policyType:
      properties:
        policyType:
          type: string
      required:
      - policyType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyType
    konfig-generated-schema-single-parameter-schema-get--timeoff-policy-types:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--timeoff-policies:
      properties:
        policyName:
          type: string
      required:
      - policyName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyName
    konfig-generated-schema-single-parameter-schema-get--timeoff-policies-names:
      properties:
        policyTypeName:
          type: string
      required:
      - policyTypeName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyTypeName
    konfig-generated-schema-single-parameter-schema-get--timeoff-employees-id-balance:
      properties:
        id:
          type: string
        policyType:
          type: string
        date:
          format: date
          type: string
      required:
      - date
      - id
      - policyType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - policyType
      - date
    konfig-generated-schema-single-parameter-schema-post--timeoff-employees-id-adjustments:
      properties:
        id:
          type: string
        adjustmentType:
          description: Adjustment type - balance or time used.
          enum:
          - balance
          - daysUsed
          type: string
        policyType:
          description: Policy type name.
          type: string
        effectiveDate:
          description: The date this adjustment becomes effective.
          format: date
          type: string
        amount:
          description: The amount of days/hours to add/subtract.
          type: number
        reason:
          description: A reason for this adjustment.
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--attendance-import-importMethod:
      properties:
        importMethod:
          enum:
          - aggregate
          - immediate
          type: string
        idType:
          description: "The ID type used to identify the employee. Can be one of:\
            \ \"bobId\", \"email\", \"idInCompany\", or a custom field.<br/>For <b>custom\
            \ fields</b> a forward slash separator should be used.<br/>In order to\
            \ use a specific custom field to identify an employee, for example a custom\
            \ field called \"Payroll integration ID\":<ul><li>Query the field name\
            \ via the <a href='https://apidocs.hibob.com/reference/get_company-people-fields'>\"\
            Get all company fields\"</a></li><li>In the response the name will look\
            \ like <b>\"identification.custom.Payroll Integration ID_1RNhIIf\"</b></li><li>The\
            \ value to use should be: <b>\"/identification/custom/Payroll Integration\
            \ ID_1RNhI\"</b></li></ul>"
          type: string
        requests:
          description: List of attendance events
          items:
            $ref: '#/components/schemas/ImportAttendanceEvent'
          type: array
        dateTimeFormat:
          description: Allows to set custom date format for the date-time values sent
            in the requests
          example: yyyy-MM-dd hh:mm a
          type: string
          x-konfig-original-example: yyyy-MM-dd hh:mm a
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ImportAttendanceData-properties-dateTimeFormat
      required:
      - idType
      - importMethod
      - requests
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - importMethod
    konfig-generated-schema-single-parameter-schema-get--payroll-history:
      properties:
        department:
          type: string
        showInactive:
          format: boolean
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department
      - showInactive
    konfig-generated-schema-single-parameter-schema-post--docs-people-id-shared:
      properties:
        id:
          type: string
        tags:
          description: Tags to.
          items:
            type: string
          type: array
        documentName:
          description: Document name.
          type: string
        documentUrl:
          description: URL of the document to upload.
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--docs-people-id-confidential:
      properties:
        id:
          type: string
        tags:
          description: Tags to.
          items:
            type: string
          type: array
        documentName:
          description: Document name.
          type: string
        documentUrl:
          description: URL of the document to upload.
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--docs-people-id-shared-upload:
      properties:
        id:
          type: string
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--docs-people-id-confidential-upload:
      properties:
        id:
          type: string
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--docs-people-id-shared-docId:
      properties:
        id:
          type: string
        docId:
          type: string
      required:
      - docId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - docId
    konfig-generated-schema-single-parameter-schema-delete--docs-people-id-confidential-docId:
      properties:
        id:
          type: string
        docId:
          type: string
      required:
      - docId
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - docId
    konfig-generated-schema-single-parameter-schema-get--docs-people-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--people-id-work:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-work-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-id-employment:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-employment-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-id-lifecycle:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--people-id-salaries:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-salaries-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-id-equities:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-equities-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-id-variable:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-variable-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-id-training:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--people-id-training-entry_id:
      properties:
        id:
          type: string
        entry_id:
          type: integer
      required:
      - entry_id
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--people-custom-tables-metadata:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--people-custom-tables-metadata-custom_table_id:
      properties:
        custom_table_id:
          type: string
      required:
      - custom_table_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - custom_table_id
    konfig-generated-schema-single-parameter-schema-get--people-custom-tables-employee_id-custom_table_id:
      properties:
        employee_id:
          type: string
        custom_table_id:
          type: string
        includeHumanReadable:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--people-custom-tables-employee_id-custom_table_id-get-parameters-2-schema
      required:
      - custom_table_id
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - custom_table_id
      - includeHumanReadable
    konfig-generated-schema-single-parameter-schema-post--people-custom-tables-employee_id-custom_table_id:
      properties:
        employee_id:
          type: string
        custom_table_id:
          type: string
        RAW_BODY:
          type: string
      required:
      - custom_table_id
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - custom_table_id
    konfig-generated-schema-single-parameter-schema-delete--people-custom-tables-employee_id-custom_table_id-entry_id:
      properties:
        employee_id:
          type: string
        custom_table_id:
          type: string
        entry_id:
          type: string
      required:
      - custom_table_id
      - employee_id
      - entry_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - custom_table_id
      - entry_id
    konfig-generated-schema-single-parameter-schema-put--people-custom-tables-employee_id-custom_table_id-entry_id:
      properties:
        employee_id:
          type: string
        custom_table_id:
          type: string
        entry_id:
          type: string
        RAW_BODY:
          type: string
      required:
      - custom_table_id
      - employee_id
      - entry_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - custom_table_id
      - entry_id
    konfig-generated-schema-single-parameter-schema-get--metadata-objects-position:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--objects-position-search:
      properties:
        fields:
          description: "Array of field ids (paths) to fetch for the positions.<br\
            \ /> Minimum 1 up to 50 fields. Any invalid number of fields will get\
            \ a response of 400 HTTP error.<br /> You can include only the field ids\
            \ listed in the [Positions Fields Metadata API](https://apidocs.hibob.com/reference/get_metadata-objects-position)."
          items:
            type: string
          type: array
        filters:
          items:
            $ref: '#/components/schemas/FilterInstruction'
          type: array
        includeHumanReadable:
          default: false
          description: Whether to include the additional "humanReadable" entry in
            the response.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetPositionsRequest-properties-includeHumanReadable
      required:
      - fields
      - filters
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    SalaryEntry_allOf:
      properties:
        base:
          $ref: '#/components/schemas/CurrencyValue'
        payPeriod:
          description: "Represents the period for this salary entry. This can be one\
            \ of: Annual, Hourly, Daily, Weekly, Monthly."
          type: string
        payFrequency:
          description: "Represents the frequency the salary is paid. This can be one\
            \ of: Weekly, Monthly, Pro rata, Every two weeks, Twice a month, Every\
            \ four weeks."
          type: string
      type: object
      example: null
    EquityEntry_allOf:
      properties:
        quantity:
          description: The number of equities granted.
          format: double
          type: number
        equityType:
          description: The type of the grant.
          type: string
        vestingCommencementDate:
          description: Vesting commencement date.
          format: date
          type: string
        consentNumber:
          description: Consent number.
          type: string
        grantDate:
          description: Date the equity was granted.
          format: date
          type: string
        optionExpiration:
          description: Date the options expire.
          format: date
          type: string
        exercisePrice:
          $ref: '#/components/schemas/CurrencyValue'
        vestingTerm:
          description: Terms for exercising this grant.
          type: string
        grantType:
          description: "Grant type. One of: Initial Grant, Merit Grant"
          type: string
        vestingSchedule:
          description: The vesting schedule ID assigned to this grant.
          format: long
          type: number
        grantNumber:
          description: The Grant number for employee.
          format: double
          type: number
        grantStatus:
          description: "Grant status. one of: Granted, Pending Approval"
          type: string
      type: object
      example: null
    VariableEntry_allOf:
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        variableType:
          description: The type of variable pay.
          type: string
        paymentPeriod:
          description: "This represents the period for this variable entry. It can\
            \ be one of: Annual, Half-Yearly, Quarterly, Monthly."
          type: string
        companyPercent:
          description: "The employee's company on-target weight, in percent."
          type: number
        departmentPercent:
          description: "The employee's department on-target weight, in percent."
          type: number
        individualPercent:
          description: "The employee's individual on-target weight, in percent."
          type: number
      type: object
      example: null
    TrainingEntry_allOf:
      properties:
        description:
          description: Further description about the training entry.
          type: string
        name:
          description: The name of the training entry. The name must be an item in
            the training list field.
          type: string
        cost:
          $ref: '#/components/schemas/CurrencyValue'
        status:
          description: The status of the training entry
          type: string
        frequency:
          description: The frequency of the training entry. The name must be of an
            item in the frequency list field.
          type: string
        startDate:
          description: The date this entry becomes effective.
          format: date
          type: string
        endDate:
          description: The date of training completion.
          format: date
          type: string
        documentId:
          description: ID of the document attached to this training entry.
          format: long
          type: number
      type: object
      example: null
    EmploymentEntry_allOf:
      properties:
        contract:
          description: Contract.
          type: string
        type:
          description: Type.
          type: string
        salaryPayType:
          description: Salary pay type.
          type: string
        effectiveDate:
          description: The date this entry becomes effective.
          format: date
          type: string
      type: object
      example: null
    WorkEntry_allOf_reportsTo:
      description: The manager's details.
      properties:
        id:
          description: The manager's employee ID.
          type: string
        firstName:
          description: The manager's first name.
          type: string
        surname:
          description: The manager's surname.
          type: string
        email:
          description: The manager's email.
          type: string
        displayName:
          description: The manager's display name.
          type: string
      required:
      - id
      type: object
      example: null
    WorkEntry_allOf:
      properties:
        title:
          description: The employee's job title.
          type: string
        department:
          description: The employee's department.
          type: string
        site:
          description: The employee's site.
          type: string
        siteId:
          description: The employee's site ID.
          type: integer
        reportsTo:
          $ref: '#/components/schemas/WorkEntry_allOf_reportsTo'
        effectiveDate:
          description: The date this entry becomes effective.
          format: date
          type: string
        customColumns:
          properties: {}
          type: object
      type: object
      example: null
    LifeCycleEntry_allOf:
      properties:
        status:
          type: string
        reasonType:
          type: string
        effectiveDate:
          description: The date this entry becomes effective.
          format: date
          type: string
      type: object
      example: null
    CreateEmployeeRequest_work:
      example:
        site: site
        startDate: 2000-01-23
      properties:
        site:
          description: The employee's site.
          type: string
        startDate:
          description: The employee's employment start date
          format: date
          type: string
      required:
      - site
      - startDate
      type: object
    EmployeeTermination_noticePeriod:
      description: Notice period length
      properties:
        unit:
          enum:
          - days
          - weeks
          - month
          - years
          example: days
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-unit
        length:
          example: 30
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeTermination-properties-noticePeriod-properties-length
      type: object
    Field_typeData:
      example:
        listId: listId
      properties:
        listId:
          description: The ID of the list in the /v1/company/named-lists endpoint.
          type: string
      type: object
    SubmitTimeoffRequestDiffHours_durations_inner:
      properties:
        date:
          description: Date of the duration.
          format: date
          type: string
        hours:
          description: The number of hours in the duration.
          type: integer
        minutes:
          description: The number of minutes in the duration.
          type: integer
      required:
      - date
      - hours
      - minutes
      type: object
    TimeoffRequest_attachmentLinks_inner:
      example:
        filename: filename
        mimeType: mimeType
        url: url
      properties:
        filename:
          type: string
        url:
          type: string
        mimeType:
          type: string
      type: object
    ObjectsMetadata_fieldType:
      example:
        type: type
        typeData:
          listId: listId
      properties:
        type:
          description: The type of the field.
          type: string
        typeData:
          $ref: '#/components/schemas/Field_typeData'
      type: object
    ObjectsMetadata_jsonPath:
      example:
        root: root
        rawData: rawData
      properties:
        root:
          description: "The path to the field json object. The field value and other\
            \ properties, such as humanReadable value, will be placed inside."
          type: string
        rawData:
          description: The path to the actual field value.
          type: string
      type: object
    PositionEntries_inner:
      example:
        /position/status: ""
        /position/site: ""
        /position/job: ""
        /position/fte: ""
        /position/employmentType: ""
        /position/managerPositionFilledBy: ""
        /position/filledBy: ""
        /position/expectedStartDate: ""
        /position/effectiveDate: ""
        /position/positionType: ""
        /position/department: ""
        /position/reason: ""
        /position/recruitmentStatus: ""
        /position/actualStartDate: ""
        /position/managerPositionId: ""
        /position/name: ""
      properties:
        /position/fte:
          description: The position's full time equivalent (FTE%).
        /position/effectiveDate:
          description: The date this position becomes effective.
        /position/employmentType:
          description: The position's employment type.
        /position/status:
          description: The position's status.
        /position/actualStartDate:
          description: The employee's assignment date for this position.
        /position/reason:
          description: Reason for changing or creating this position.
        /position/positionType:
          description: The position's type.
        /position/filledBy:
          description: The current assigned employee for this position.
        /position/job:
          description: The position's job.
        /position/recruitmentStatus:
          description: The position's recruitment status.
        /position/name:
          description: The unique ID of this position.
        /position/department:
          description: The position's department.
        /position/site:
          description: The position's site.
        /position/expectedStartDate:
          description: The expected date this position should be filled.
        /position/managerPositionId:
          description: The manager's position ID.
        /position/managerPositionFilledBy:
          description: The current assigned manager for this position.
      type: object
    PeopleUpdateEmployeeRecordRequest_personal:
      properties:
        birthDate:
          example: 2002-01-01
          type: string
          x-konfig-original-example: 2002-01-01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-personal-properties-birthDate
      type: object
    PeopleUpdateEmployeeRecordRequest_about:
      properties:
        hobbies:
          items:
            example: music
            type: string
            x-konfig-original-example: music
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-PeopleUpdateEmployeeRecordRequest-properties-about-properties-hobbies-items
          type: array
      type: object
  securitySchemes:
    Bearer:
      in: header
      name: Authorization
      type: apiKey
      x-konfig-globally-required-security: false
    Basic:
      scheme: basic
      type: http
      x-konfig-globally-required-security: false
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

