/*
 * Bob API
 * Access your employees data with the Bob API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PositionEntriesInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PositionEntriesInner {
  public static final String SERIALIZED_NAME_POSITION_FTE = "/position/fte";
  @SerializedName(SERIALIZED_NAME_POSITION_FTE)
  private Object positionFte = null;

  public static final String SERIALIZED_NAME_POSITION_EFFECTIVE_DATE = "/position/effectiveDate";
  @SerializedName(SERIALIZED_NAME_POSITION_EFFECTIVE_DATE)
  private Object positionEffectiveDate = null;

  public static final String SERIALIZED_NAME_POSITION_EMPLOYMENT_TYPE = "/position/employmentType";
  @SerializedName(SERIALIZED_NAME_POSITION_EMPLOYMENT_TYPE)
  private Object positionEmploymentType = null;

  public static final String SERIALIZED_NAME_POSITION_STATUS = "/position/status";
  @SerializedName(SERIALIZED_NAME_POSITION_STATUS)
  private Object positionStatus = null;

  public static final String SERIALIZED_NAME_POSITION_ACTUAL_START_DATE = "/position/actualStartDate";
  @SerializedName(SERIALIZED_NAME_POSITION_ACTUAL_START_DATE)
  private Object positionActualStartDate = null;

  public static final String SERIALIZED_NAME_POSITION_REASON = "/position/reason";
  @SerializedName(SERIALIZED_NAME_POSITION_REASON)
  private Object positionReason = null;

  public static final String SERIALIZED_NAME_POSITION_POSITION_TYPE = "/position/positionType";
  @SerializedName(SERIALIZED_NAME_POSITION_POSITION_TYPE)
  private Object positionPositionType = null;

  public static final String SERIALIZED_NAME_POSITION_FILLED_BY = "/position/filledBy";
  @SerializedName(SERIALIZED_NAME_POSITION_FILLED_BY)
  private Object positionFilledBy = null;

  public static final String SERIALIZED_NAME_POSITION_JOB = "/position/job";
  @SerializedName(SERIALIZED_NAME_POSITION_JOB)
  private Object positionJob = null;

  public static final String SERIALIZED_NAME_POSITION_RECRUITMENT_STATUS = "/position/recruitmentStatus";
  @SerializedName(SERIALIZED_NAME_POSITION_RECRUITMENT_STATUS)
  private Object positionRecruitmentStatus = null;

  public static final String SERIALIZED_NAME_POSITION_NAME = "/position/name";
  @SerializedName(SERIALIZED_NAME_POSITION_NAME)
  private Object positionName = null;

  public static final String SERIALIZED_NAME_POSITION_DEPARTMENT = "/position/department";
  @SerializedName(SERIALIZED_NAME_POSITION_DEPARTMENT)
  private Object positionDepartment = null;

  public static final String SERIALIZED_NAME_POSITION_SITE = "/position/site";
  @SerializedName(SERIALIZED_NAME_POSITION_SITE)
  private Object positionSite = null;

  public static final String SERIALIZED_NAME_POSITION_EXPECTED_START_DATE = "/position/expectedStartDate";
  @SerializedName(SERIALIZED_NAME_POSITION_EXPECTED_START_DATE)
  private Object positionExpectedStartDate = null;

  public static final String SERIALIZED_NAME_POSITION_MANAGER_POSITION_ID = "/position/managerPositionId";
  @SerializedName(SERIALIZED_NAME_POSITION_MANAGER_POSITION_ID)
  private Object positionManagerPositionId = null;

  public static final String SERIALIZED_NAME_POSITION_MANAGER_POSITION_FILLED_BY = "/position/managerPositionFilledBy";
  @SerializedName(SERIALIZED_NAME_POSITION_MANAGER_POSITION_FILLED_BY)
  private Object positionManagerPositionFilledBy = null;

  public PositionEntriesInner() {
  }

  public PositionEntriesInner positionFte(Object positionFte) {
    
    
    
    
    this.positionFte = positionFte;
    return this;
  }

   /**
   * The position&#39;s full time equivalent (FTE%).
   * @return positionFte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's full time equivalent (FTE%).")

  public Object getPositionFte() {
    return positionFte;
  }


  public void setPositionFte(Object positionFte) {
    
    
    
    this.positionFte = positionFte;
  }


  public PositionEntriesInner positionEffectiveDate(Object positionEffectiveDate) {
    
    
    
    
    this.positionEffectiveDate = positionEffectiveDate;
    return this;
  }

   /**
   * The date this position becomes effective.
   * @return positionEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date this position becomes effective.")

  public Object getPositionEffectiveDate() {
    return positionEffectiveDate;
  }


  public void setPositionEffectiveDate(Object positionEffectiveDate) {
    
    
    
    this.positionEffectiveDate = positionEffectiveDate;
  }


  public PositionEntriesInner positionEmploymentType(Object positionEmploymentType) {
    
    
    
    
    this.positionEmploymentType = positionEmploymentType;
    return this;
  }

   /**
   * The position&#39;s employment type.
   * @return positionEmploymentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's employment type.")

  public Object getPositionEmploymentType() {
    return positionEmploymentType;
  }


  public void setPositionEmploymentType(Object positionEmploymentType) {
    
    
    
    this.positionEmploymentType = positionEmploymentType;
  }


  public PositionEntriesInner positionStatus(Object positionStatus) {
    
    
    
    
    this.positionStatus = positionStatus;
    return this;
  }

   /**
   * The position&#39;s status.
   * @return positionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's status.")

  public Object getPositionStatus() {
    return positionStatus;
  }


  public void setPositionStatus(Object positionStatus) {
    
    
    
    this.positionStatus = positionStatus;
  }


  public PositionEntriesInner positionActualStartDate(Object positionActualStartDate) {
    
    
    
    
    this.positionActualStartDate = positionActualStartDate;
    return this;
  }

   /**
   * The employee&#39;s assignment date for this position.
   * @return positionActualStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The employee's assignment date for this position.")

  public Object getPositionActualStartDate() {
    return positionActualStartDate;
  }


  public void setPositionActualStartDate(Object positionActualStartDate) {
    
    
    
    this.positionActualStartDate = positionActualStartDate;
  }


  public PositionEntriesInner positionReason(Object positionReason) {
    
    
    
    
    this.positionReason = positionReason;
    return this;
  }

   /**
   * Reason for changing or creating this position.
   * @return positionReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for changing or creating this position.")

  public Object getPositionReason() {
    return positionReason;
  }


  public void setPositionReason(Object positionReason) {
    
    
    
    this.positionReason = positionReason;
  }


  public PositionEntriesInner positionPositionType(Object positionPositionType) {
    
    
    
    
    this.positionPositionType = positionPositionType;
    return this;
  }

   /**
   * The position&#39;s type.
   * @return positionPositionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's type.")

  public Object getPositionPositionType() {
    return positionPositionType;
  }


  public void setPositionPositionType(Object positionPositionType) {
    
    
    
    this.positionPositionType = positionPositionType;
  }


  public PositionEntriesInner positionFilledBy(Object positionFilledBy) {
    
    
    
    
    this.positionFilledBy = positionFilledBy;
    return this;
  }

   /**
   * The current assigned employee for this position.
   * @return positionFilledBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current assigned employee for this position.")

  public Object getPositionFilledBy() {
    return positionFilledBy;
  }


  public void setPositionFilledBy(Object positionFilledBy) {
    
    
    
    this.positionFilledBy = positionFilledBy;
  }


  public PositionEntriesInner positionJob(Object positionJob) {
    
    
    
    
    this.positionJob = positionJob;
    return this;
  }

   /**
   * The position&#39;s job.
   * @return positionJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's job.")

  public Object getPositionJob() {
    return positionJob;
  }


  public void setPositionJob(Object positionJob) {
    
    
    
    this.positionJob = positionJob;
  }


  public PositionEntriesInner positionRecruitmentStatus(Object positionRecruitmentStatus) {
    
    
    
    
    this.positionRecruitmentStatus = positionRecruitmentStatus;
    return this;
  }

   /**
   * The position&#39;s recruitment status.
   * @return positionRecruitmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's recruitment status.")

  public Object getPositionRecruitmentStatus() {
    return positionRecruitmentStatus;
  }


  public void setPositionRecruitmentStatus(Object positionRecruitmentStatus) {
    
    
    
    this.positionRecruitmentStatus = positionRecruitmentStatus;
  }


  public PositionEntriesInner positionName(Object positionName) {
    
    
    
    
    this.positionName = positionName;
    return this;
  }

   /**
   * The unique ID of this position.
   * @return positionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of this position.")

  public Object getPositionName() {
    return positionName;
  }


  public void setPositionName(Object positionName) {
    
    
    
    this.positionName = positionName;
  }


  public PositionEntriesInner positionDepartment(Object positionDepartment) {
    
    
    
    
    this.positionDepartment = positionDepartment;
    return this;
  }

   /**
   * The position&#39;s department.
   * @return positionDepartment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's department.")

  public Object getPositionDepartment() {
    return positionDepartment;
  }


  public void setPositionDepartment(Object positionDepartment) {
    
    
    
    this.positionDepartment = positionDepartment;
  }


  public PositionEntriesInner positionSite(Object positionSite) {
    
    
    
    
    this.positionSite = positionSite;
    return this;
  }

   /**
   * The position&#39;s site.
   * @return positionSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position's site.")

  public Object getPositionSite() {
    return positionSite;
  }


  public void setPositionSite(Object positionSite) {
    
    
    
    this.positionSite = positionSite;
  }


  public PositionEntriesInner positionExpectedStartDate(Object positionExpectedStartDate) {
    
    
    
    
    this.positionExpectedStartDate = positionExpectedStartDate;
    return this;
  }

   /**
   * The expected date this position should be filled.
   * @return positionExpectedStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The expected date this position should be filled.")

  public Object getPositionExpectedStartDate() {
    return positionExpectedStartDate;
  }


  public void setPositionExpectedStartDate(Object positionExpectedStartDate) {
    
    
    
    this.positionExpectedStartDate = positionExpectedStartDate;
  }


  public PositionEntriesInner positionManagerPositionId(Object positionManagerPositionId) {
    
    
    
    
    this.positionManagerPositionId = positionManagerPositionId;
    return this;
  }

   /**
   * The manager&#39;s position ID.
   * @return positionManagerPositionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The manager's position ID.")

  public Object getPositionManagerPositionId() {
    return positionManagerPositionId;
  }


  public void setPositionManagerPositionId(Object positionManagerPositionId) {
    
    
    
    this.positionManagerPositionId = positionManagerPositionId;
  }


  public PositionEntriesInner positionManagerPositionFilledBy(Object positionManagerPositionFilledBy) {
    
    
    
    
    this.positionManagerPositionFilledBy = positionManagerPositionFilledBy;
    return this;
  }

   /**
   * The current assigned manager for this position.
   * @return positionManagerPositionFilledBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current assigned manager for this position.")

  public Object getPositionManagerPositionFilledBy() {
    return positionManagerPositionFilledBy;
  }


  public void setPositionManagerPositionFilledBy(Object positionManagerPositionFilledBy) {
    
    
    
    this.positionManagerPositionFilledBy = positionManagerPositionFilledBy;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PositionEntriesInner instance itself
   */
  public PositionEntriesInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PositionEntriesInner positionEntriesInner = (PositionEntriesInner) o;
    return Objects.equals(this.positionFte, positionEntriesInner.positionFte) &&
        Objects.equals(this.positionEffectiveDate, positionEntriesInner.positionEffectiveDate) &&
        Objects.equals(this.positionEmploymentType, positionEntriesInner.positionEmploymentType) &&
        Objects.equals(this.positionStatus, positionEntriesInner.positionStatus) &&
        Objects.equals(this.positionActualStartDate, positionEntriesInner.positionActualStartDate) &&
        Objects.equals(this.positionReason, positionEntriesInner.positionReason) &&
        Objects.equals(this.positionPositionType, positionEntriesInner.positionPositionType) &&
        Objects.equals(this.positionFilledBy, positionEntriesInner.positionFilledBy) &&
        Objects.equals(this.positionJob, positionEntriesInner.positionJob) &&
        Objects.equals(this.positionRecruitmentStatus, positionEntriesInner.positionRecruitmentStatus) &&
        Objects.equals(this.positionName, positionEntriesInner.positionName) &&
        Objects.equals(this.positionDepartment, positionEntriesInner.positionDepartment) &&
        Objects.equals(this.positionSite, positionEntriesInner.positionSite) &&
        Objects.equals(this.positionExpectedStartDate, positionEntriesInner.positionExpectedStartDate) &&
        Objects.equals(this.positionManagerPositionId, positionEntriesInner.positionManagerPositionId) &&
        Objects.equals(this.positionManagerPositionFilledBy, positionEntriesInner.positionManagerPositionFilledBy)&&
        Objects.equals(this.additionalProperties, positionEntriesInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(positionFte, positionEffectiveDate, positionEmploymentType, positionStatus, positionActualStartDate, positionReason, positionPositionType, positionFilledBy, positionJob, positionRecruitmentStatus, positionName, positionDepartment, positionSite, positionExpectedStartDate, positionManagerPositionId, positionManagerPositionFilledBy, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PositionEntriesInner {\n");
    sb.append("    positionFte: ").append(toIndentedString(positionFte)).append("\n");
    sb.append("    positionEffectiveDate: ").append(toIndentedString(positionEffectiveDate)).append("\n");
    sb.append("    positionEmploymentType: ").append(toIndentedString(positionEmploymentType)).append("\n");
    sb.append("    positionStatus: ").append(toIndentedString(positionStatus)).append("\n");
    sb.append("    positionActualStartDate: ").append(toIndentedString(positionActualStartDate)).append("\n");
    sb.append("    positionReason: ").append(toIndentedString(positionReason)).append("\n");
    sb.append("    positionPositionType: ").append(toIndentedString(positionPositionType)).append("\n");
    sb.append("    positionFilledBy: ").append(toIndentedString(positionFilledBy)).append("\n");
    sb.append("    positionJob: ").append(toIndentedString(positionJob)).append("\n");
    sb.append("    positionRecruitmentStatus: ").append(toIndentedString(positionRecruitmentStatus)).append("\n");
    sb.append("    positionName: ").append(toIndentedString(positionName)).append("\n");
    sb.append("    positionDepartment: ").append(toIndentedString(positionDepartment)).append("\n");
    sb.append("    positionSite: ").append(toIndentedString(positionSite)).append("\n");
    sb.append("    positionExpectedStartDate: ").append(toIndentedString(positionExpectedStartDate)).append("\n");
    sb.append("    positionManagerPositionId: ").append(toIndentedString(positionManagerPositionId)).append("\n");
    sb.append("    positionManagerPositionFilledBy: ").append(toIndentedString(positionManagerPositionFilledBy)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("/position/fte");
    openapiFields.add("/position/effectiveDate");
    openapiFields.add("/position/employmentType");
    openapiFields.add("/position/status");
    openapiFields.add("/position/actualStartDate");
    openapiFields.add("/position/reason");
    openapiFields.add("/position/positionType");
    openapiFields.add("/position/filledBy");
    openapiFields.add("/position/job");
    openapiFields.add("/position/recruitmentStatus");
    openapiFields.add("/position/name");
    openapiFields.add("/position/department");
    openapiFields.add("/position/site");
    openapiFields.add("/position/expectedStartDate");
    openapiFields.add("/position/managerPositionId");
    openapiFields.add("/position/managerPositionFilledBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PositionEntriesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PositionEntriesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PositionEntriesInner is not found in the empty JSON string", PositionEntriesInner.openapiRequiredFields.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PositionEntriesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PositionEntriesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PositionEntriesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PositionEntriesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PositionEntriesInner>() {
           @Override
           public void write(JsonWriter out, PositionEntriesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PositionEntriesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PositionEntriesInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PositionEntriesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PositionEntriesInner
  * @throws IOException if the JSON string is invalid with respect to PositionEntriesInner
  */
  public static PositionEntriesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PositionEntriesInner.class);
  }

 /**
  * Convert an instance of PositionEntriesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

