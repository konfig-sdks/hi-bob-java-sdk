/*
 * Bob API
 * Access your employees data with the Bob API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddDocument;
import com.konfigthis.client.model.DocumentsUploadConfidentialFileRequest;
import com.konfigthis.client.model.DocumentsUploadToSharedFolderRequest;
import com.konfigthis.client.model.EmployeeDocumentResponse;
import com.konfigthis.client.model.Error;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentsApi
 */
@Disabled
public class DocumentsApiTest {

    private static DocumentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DocumentsApi(apiClient);
    }

    /**
     * Delete a specific document from the employee&#39;s confidential folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEmployeeConfidentialDocTest() throws ApiException {
        String id = null;
        String docId = null;
        api.deleteEmployeeConfidentialDoc(id, docId)
                .execute();
        // TODO: test validations
    }

    /**
     * Download employee&#39;s documents
     *
     * Returns a list of documents and download links.&lt;br /&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadLinksTest() throws ApiException {
        String id = null;
        EmployeeDocumentResponse response = api.downloadLinks(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete specific document from the employee&#39;s shared folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeEmployeeSharedDocumentTest() throws ApiException {
        String id = null;
        String docId = null;
        api.removeEmployeeSharedDocument(id, docId)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a file to the employee&#39;s confidential folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadConfidentialFileTest() throws ApiException {
        String id = null;
        File _file = null;
        api.uploadConfidentialFile(id, _file)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a document to the employee&#39;s confidential folder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadToConfidentialFolderTest() throws ApiException {
        String id = null;
        List<String> tags = null;
        String documentName = null;
        String documentUrl = null;
        api.uploadToConfidentialFolder(id)
                .tags(tags)
                .documentName(documentName)
                .documentUrl(documentUrl)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a document to the employee&#39;s shared folder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadToSharedFolderTest() throws ApiException {
        String id = null;
        List<String> tags = null;
        String documentName = null;
        String documentUrl = null;
        api.uploadToSharedFolder(id)
                .tags(tags)
                .documentName(documentName)
                .documentUrl(documentUrl)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a file to the employee&#39;s shared folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadToSharedFolder_0Test() throws ApiException {
        String id = null;
        File _file = null;
        api.uploadToSharedFolder_0(id, _file)
                .execute();
        // TODO: test validations
    }

}
